<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>


	<!--  IMPORTANT NOTE: 
	      {tss_data_point} will be replaced by tss_data_point OR tss_intraday_data_point
	      {tss_data_point_delta} will be replaced by tss_data_point_delta OR tss_intraday_data_point_delta
	      See the constructor of RowStoreTimeSeriesMaster class
	-->

	<bean id="tssNamedSQLMap"  class="org.springframework.beans.factory.config.MapFactoryBean">
   		<property name="sourceMap">
      		<map>
      		    <entry> 
        			<key><value>loadAllIdentifiers</value></key>
        			<value>
        				<![CDATA[
        					SELECT dsi.bundle_id as bundleId, d.name as scheme, dsi.identifier_value as identifier_value
        					FROM tss_identifier dsi
        					JOIN tss_identification_scheme as d ON dsi.identification_scheme_id = d.id
        					ORDER by dsi.bundle_id
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>insertIdentifier</value></key>
        			<value>
        				<![CDATA[
        					INSERT into tss_identifier 
        					(bundle_id, identification_scheme_id, identifier_value) VALUES (:bundleId, :schemeId, :identifier_value)
        				]]>
        			</value>
        		</entry>
        		<entry key="selectDataProviderID" value="SELECT id FROM tss_data_provider WHERE name = :name"/>
        		<entry key="loadAllDataProvider" value="SELECT id, name, description FROM tss_data_provider"/>
        		<entry key="insertDataProvider" value="INSERT INTO tss_data_provider (name, description) VALUES (:name, :description)"/>
        		<entry key="selectDataSourceID" value="SELECT id FROM tss_data_source WHERE name = :name"/>
        		<entry key="insertDataSource" value="INSERT INTO tss_data_source (name, description) VALUES (:name, :description)"/>
        		<entry key="loadAllDataSources" value="SELECT id, name, description FROM tss_data_source"/>
        		<entry key="insertDataField" value="INSERT INTO tss_data_field (name, description) VALUES (:name, :description)"/>
        		<entry key="selectDataFieldID" value="SELECT id FROM tss_data_field WHERE name = :name"/>
        		<entry key="loadAllDataFields" value="SELECT id, name, description FROM tss_data_field"/>
        		<entry key="insertObservationTime" value="INSERT INTO tss_observation_time (name, description) VALUES (:name, :description)"/>
        		<entry key="selectObservationTimeID" value="SELECT id FROM tss_observation_time WHERE name = :name"/>
        		<entry key="loadAllObservationTimes" value="SELECT id, name, description FROM tss_observation_time"/>
        		<entry key="insertQuotedObject" value="INSERT INTO tss_identifier_bundle (name, description) VALUES (:name, :description)"/>
        		<entry key="selectQuotedObjectID" value="SELECT id FROM tss_identifier_bundle WHERE name = :name"/>
        		<entry> 
        			<key><value>selectBundleFromIdentifiers</value></key>
        			<value>
        				<![CDATA[
        				    SELECT qo.id as bundleId, qo.name, d.name as scheme, dsi.identifier_value
        					FROM tss_identifier_bundle as qo
        					JOIN tss_identifier as dsi ON qo.id = dsi.bundle_id
        					JOIN tss_identification_scheme as d ON dsi.identification_scheme_id = d.id
        					WHERE qo.id in (
	        					SELECT qo.id
	        					FROM tss_identifier_bundle as qo
	        					JOIN tss_identifier as dsi ON qo.id = dsi.bundle_id
	        					JOIN tss_identification_scheme as d ON dsi.identification_scheme_id = d.id
	        					WHERE :identifierBundleClause
	        				)
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>selectAllIdentifierBundle</value></key>
        			<value>
        				<![CDATA[
        				    SELECT qo.id as bundleId, qo.name, d.name as scheme, dsi.identifier_value
							FROM tss_identifier as dsi
							JOIN tss_identifier_bundle as qo ON qo.id = dsi.bundle_id
							JOIN tss_identification_scheme as d ON dsi.identification_scheme_id = d.id
        				]]>
        			</value>
        		</entry>
        		
        		<entry key="insertScheme" value="INSERT INTO tss_identification_scheme (name, description) VALUES (:name, :description)"/>
        		<entry key="selectSchemeID" value="SELECT id FROM tss_identification_scheme WHERE name = :name"/>
        		<entry key="loadAllScheme" value="SELECT id, name, description FROM tss_identification_scheme"/>
        		<entry> 
        			<key><value>getTimeSeriesKeyByID</value></key>
        			<value>
        				<![CDATA[
        					SELECT tskey.id 
        					FROM tss_meta_data tskey 
        					WHERE tskey.bundle_id = :qoid 
        					AND tskey.data_source_id = :dsid 
        					AND tskey.data_provider_id = :dpid 
        					AND tskey.data_field_id = :dfid 
        					AND tskey.observation_time_id = :otid
        				]]>
        			</value>
        		</entry>
        	    <entry> 
        			<key><value>getTimeSeriesKey</value></key>
        			<value>
        				<![CDATA[
        					SELECT tskey.id 
        					FROM tss_meta_data as tskey
        					JOIN tss_identifier_bundle as qo ON tskey.bundle_id = qo.id
        					JOIN tss_data_source as ds ON tskey.data_source_id = ds.id
        					JOIN tss_data_provider as dp ON tskey.data_provider_id = dp.id
        					JOIN tss_data_field as df ON tskey.data_field_id = df.id
        					JOIN tss_observation_time as ot ON tskey.observation_time_id = ot.id
        					WHERE ds.name = :dataSource AND dp.name = :dataProvider AND df.name = :dataField AND ot.name = :observationTime
        					AND qo.id = :bundleId
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>deactivateMetaData</value></key>
        			<value>
        				<![CDATA[
        					UPDATE tss_meta_data
        					set active = 0
        					WHERE id = :tsKey
        				]]>
        			</value>
        		</entry>	
        	    <entry> 
        			<key><value>getActiveMetaData</value></key>
        			<value>
        				<![CDATA[
        					SELECT tskey.id as tsKey, tskey.bundle_id as bundleId, ds.name as dataSource, dp.name as dataProvider, df.name as dataField, ot.name as observationTime 
        					FROM tss_meta_data as tskey
        					JOIN tss_data_source as ds ON tskey.data_source_id = ds.id
        					JOIN tss_data_provider as dp ON tskey.data_provider_id = dp.id
        					JOIN tss_data_field as df ON tskey.data_field_id = df.id
        					JOIN tss_observation_time ot ON tskey.observation_time_id = ot.id
        					WHERE tskey.bundle_id in (SELECT distinct bundle_id FROM tss_identifier)
        					AND tsKey.active = 1
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>getActiveMetaDataByIdentifiers</value></key>
        			<value>
        				<![CDATA[
        					SELECT tskey.id as tsKey, tskey.bundle_id as bundleId, ds.name as dataSource, dp.name as dataProvider, df.name as dataField, ot.name as observationTime 
        					FROM tss_meta_data as tskey
        					JOIN tss_data_source as ds ON tskey.data_source_id = ds.id
        					JOIN tss_data_provider as dp ON tskey.data_provider_id = dp.id
        					JOIN tss_data_field as df ON tskey.data_field_id = df.id
        					JOIN tss_observation_time ot ON tskey.observation_time_id = ot.id
        					WHERE tskey.bundle_id in (:bundleIds)
        					AND tsKey.active = 1
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>getActiveMetaDataWithDates</value></key>
        			<value>
        				<![CDATA[
        					SELECT tskey.id as tsKey, tskey.bundle_id as bundleId, ds.name as dataSource, 
        					       dp.name as dataProvider, df.name as dataField, ot.name as observationTime,
        					       dates.earliest, dates.latest
        					FROM tss_meta_data as tskey
        					JOIN tss_data_source as ds ON tskey.data_source_id = ds.id
        					JOIN tss_data_provider as dp ON tskey.data_provider_id = dp.id
        					JOIN tss_data_field as df ON tskey.data_field_id = df.id
        					JOIN tss_observation_time ot ON tskey.observation_time_id = ot.id
        					JOIN (SELECT meta_data_id, min(ts_date) as earliest, max(ts_date) as latest
									FROM {tss_data_point}
									GROUP BY meta_data_id
								  ) dates ON tskey.id = dates.meta_data_id
        					WHERE tskey.bundle_id in (SELECT distinct bundle_id FROM tss_identifier)
        					AND tsKey.active = 1
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>getActiveMetaDataWithDatesByIdentifiers</value></key>
        			<value>
        				<![CDATA[
        					SELECT tskey.id as tsKey, tskey.bundle_id as bundleId, ds.name as dataSource, 
        					       dp.name as dataProvider, df.name as dataField, ot.name as observationTime,
        					       dates.earliest, dates.latest
        					FROM tss_meta_data as tskey
        					JOIN tss_data_source as ds ON tskey.data_source_id = ds.id
        					JOIN tss_data_provider as dp ON tskey.data_provider_id = dp.id
        					JOIN tss_data_field as df ON tskey.data_field_id = df.id
        					JOIN tss_observation_time ot ON tskey.observation_time_id = ot.id
        					JOIN (SELECT meta_data_id, min(ts_date) as earliest, max(ts_date) as latest
									FROM {tss_data_point}
									GROUP BY meta_data_id
								  ) dates ON tskey.id = dates.meta_data_id
        					WHERE tskey.bundle_id in (:bundleIds)
        					AND tsKey.active = 1
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>getActiveMetaDataByOid</value></key>
        			<value>
        				<![CDATA[
        					SELECT tsKey.id as tsKey, d.name as scheme, dsi.identifier_value as value, ds.name as dataSource, dp.name as dataProvider, df.name as dataField, ot.name as observationTime 
        					FROM tss_meta_data as tskey
        					JOIN tss_identifier as dsi ON tsKey.bundle_id = dsi.bundle_id
        					JOIN tss_data_source as ds ON tskey.data_source_id = ds.id
        					JOIN tss_data_provider as dp ON tskey.data_provider_id = dp.id 
        					JOIN tss_data_field as df ON tskey.data_field_id = df.id 
        					JOIN tss_observation_time as ot ON tskey.observation_time_id = ot.id
        					JOIN tss_identification_scheme as d ON dsi.identification_scheme_id = d.id
        					WHERE tskey.id = :oid
        					AND tsKey.active = 1
        				]]>
        			</value>
        		</entry>
        		<entry>
        			<key><value>getTimeSeriesDateRangeByOid</value></key>
        			<value>
        				<![CDATA[
        					SELECT min(ts_date) as earliest, max(ts_date) as latest
							FROM {tss_data_point}
							WHERE meta_data_id = :oid
        				]]>
        			</value>
        		</entry>	
        		<entry> 
        			<key><value>insertTimeSeriesKey</value></key>
        			<value>
        				<![CDATA[
        					INSERT into tss_meta_data (bundle_id, active, data_source_id, data_provider_id, data_field_id, observation_time_id) 
        					VALUES (:bundleId, 1, :dataSourceId, :dataProviderId, :dataFieldId, :observationTimeId)
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>insertTimeSeries</value></key>
        			<value>
        				<![CDATA[
        					INSERT INTO {tss_data_point} (meta_data_id, ts_date, value) 
        					VALUES (:timeSeriesID, :date, :value)
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>insertTimeSeriesDeltaI</value></key>
        			<value>
        				<![CDATA[
        					INSERT INTO {tss_data_point_delta} (meta_data_id, time_stamp, ts_date, old_value, operation) 
        					VALUES (:timeSeriesID, :timeStamp, :date, :value, 'I')
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>insertTimeSeriesDeltaD</value></key>
        			<value>
        				<![CDATA[
        					INSERT INTO {tss_data_point_delta} (meta_data_id, time_stamp, ts_date, old_value, operation) 
        					VALUES (:timeSeriesID, :timeStamp, :date, :value, 'D')
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>insertTimeSeriesDeltaU</value></key>
        			<value>
        				<![CDATA[
        					INSERT INTO {tss_data_point_delta} (meta_data_id, time_stamp, ts_date, old_value, operation) 
        					VALUES (:tsID, :timeStamp, :date, :oldValue, 'U')
        				]]>
        			</value>
        		</entry>
        		<entry> 
        			<key><value>loadTimeSeriesWithDates</value></key>
        			<value>
        				<![CDATA[
        					SELECT ts_date, value 
        					FROM {tss_data_point} 
        					WHERE meta_data_id = :timeSeriesKey 
        				]]>
        			</value>
        		</entry>
        		
        		<!--  See the comment at the beginning of the file to understand the bracketed table names -->
        		
        		<entry key="updateTimeSeries" value="UPDATE {tss_data_point} SET value = :newValue WHERE meta_data_id = :tsID AND ts_date = :date "/>
        		<entry key="getTimeSeriesByID" value="SELECT ts_date, value FROM {tss_data_point} where meta_data_id = :tsID"/>
        		<entry key="deleteTimeSeriesByID" value="DELETE FROM {tss_data_point} WHERE meta_data_id = :tsID"/>
        		<entry key="findDataPointByDateAndID" value="SELECT value FROM {tss_data_point} WHERE meta_data_id = :tsID AND ts_date = :date"/>
        		<entry key="deleteDataPoint" value="DELETE FROM {tss_data_point} WHERE meta_data_id = :tsID AND ts_date = :date"/>
        		<entry key="deleteDataPointsByDate" value="DELETE FROM {tss_data_point} WHERE meta_data_id = :tsID AND ts_date &lt; :date"/>
        		<entry key="loadTimeSeriesDelta" value="SELECT ts_date, old_value, operation FROM {tss_data_point_delta} WHERE meta_data_id = :tsID AND time_stamp >= :time ORDER BY time_stamp desc"/>
        	</map>	
    	</property>
	</bean>
</beans>
