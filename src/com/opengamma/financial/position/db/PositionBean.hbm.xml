<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="com.opengamma.financial.position.db">
  <class name="PositionBean" table="pos_position">
    <id name="id">
      <generator class="org.hibernate.id.enhanced.SequenceStyleGenerator"/>
    </id>
    <property name="identifier" type="string" not-null="true" />
    <property name="startDate" type="date" />
    <property name="endDate" type="date" />
    <property name="quantity" type="big_decimal" />
    <property name="counterparty" type="string" />
    <property name="trader" type="string" />
  </class>
  <query name="PositionBean.one.byIdentifier">
    from
      PositionBean as p
    where
      (p.startDate is null or p.startDate &lt;= :now) and
      (p.endDate is null or p.endDate &gt; :now) and
      p.identifier = :identifier
  </query>
  <sql-query name="PositionBean.many.byImmediatePortfolioNodeId">
    <return alias="p" class="PositionBean" />
    SELECT
      {p.*}
    FROM
      pos_nodeinclusion AS i INNER JOIN
      pos_position AS p ON i.position_id = p.id
    WHERE
      i.node_id = :portfolioNodeId AND
      (p.startDate IS NULL OR p.startDate &lt;= :now) AND
      (p.endDate IS NULL OR p.endDate &gt; :now)
  </sql-query>
  <sql-query name="PositionBean.many.byPortfolioNodeId">
    <return alias="p" class="PositionBean" />
    SELECT
      {p.*}
    FROM
      pos_portfolionode AS n INNER JOIN
      pos_nodeinclusion AS i ON n.id = i.node_id INNER JOIN
      pos_position AS p ON i.position_id = p.id LEFT OUTER JOIN
      pos_nodehierarchy AS h ON n.id = h.descendant_id
    WHERE
      (n.id = :portfolioNodeId OR h.ancestor_id = :portfolioNodeId) AND
      (n.startDate IS NULL OR n.startDate &lt;= :now) AND
      (n.endDate IS NULL OR n.endDate &gt; :now) AND
      (p.startDate IS NULL OR p.startDate &lt;= :now) AND
      (p.endDate IS NULL OR p.endDate &gt; :now) 
  </sql-query>
</hibernate-mapping>