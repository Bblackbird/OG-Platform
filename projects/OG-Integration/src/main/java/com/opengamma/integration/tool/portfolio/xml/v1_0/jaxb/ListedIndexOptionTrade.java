/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma
 group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.integration.tool.portfolio.xml.v1_0.jaxb;

import java.math.BigDecimal;
import java.util.List;

import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.joda.beans.BeanDefinition;
import org.joda.beans.PropertyDefinition;
import org.threeten.bp.LocalDate;

import com.opengamma.financial.security.option.OptionType;
import com.opengamma.util.money.Currency;

import java.util.Map;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;
import org.threeten.bp.YearMonth;

@XmlRootElement
@BeanDefinition
public class ListedIndexOptionTrade extends Trade {

  public enum ListedIndexOptionType {
    @XmlEnumValue(value = "equityIndexOption")
    EQUITY_INDEX_OPTION,
    @XmlEnumValue(value = "equityDividendOption")
    EQUITY_DIVIDEND_OPTION
  }

  @XmlAttribute(name = "type", required = true)
  @PropertyDefinition(validate = "notNull")
  private ListedIndexOptionType _listedIndexOptionType;

  @XmlElement(name = "optionType", required = true)
  @PropertyDefinition
  private OptionType _optionType;

  @XmlElement(name = "buySell", required = true)
  @PropertyDefinition
  private BuySell _buySell;

  @XmlElement(name = "underlyingId", required = true)
  @PropertyDefinition
  private IdWrapper _underlyingId;

  @XmlElement(name = "strike", required = true)
  @PropertyDefinition
  private BigDecimal _strike;

  @XmlElement(name = "optionExpiry", required = true)
  @XmlJavaTypeAdapter(OptionExpiryDateAdapter.class)
  @PropertyDefinition
  private YearMonth _optionExpiry;

  @XmlElement(name = "exerciseType", required = true)
  @PropertyDefinition
  private ExerciseType _exerciseType;

  @XmlElement(name = "numContracts", required = true)
  @PropertyDefinition
  private int _numContracts;

  @XmlElement(name = "pointValue", required = true)
  @PropertyDefinition
  private int _pointValue;

  @XmlElement(name = "currency", required = true)
  @PropertyDefinition
  private Currency _currency;

  @XmlElement(name = "exchange", required = true)
  @PropertyDefinition
  private String _exchange;

  @XmlElementWrapper(name = "brokers")
  @XmlElement(name = "broker")
  @PropertyDefinition
  private List<Broker> _brokers;

  @Override
  public boolean canBePositionAggregated() {
    return true;
  }

  @Override
  public BigDecimal getQuantity() {
    BigDecimal qty = new BigDecimal(getNumContracts());
    return getBuySell() == BuySell.BUY ? qty : qty.negate();
  }

  @Override
  public IdWrapper getCounterparty() {
    IdWrapper counterparty = new IdWrapper();
    ExtId extId = new ExtId();
    extId.setScheme("CPARTY");
    extId.setId(getExchange());
    counterparty.setExternalId(extId);
    return counterparty;
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code ListedIndexOptionTrade}.
   * @return the meta-bean, not null
   */
  public static ListedIndexOptionTrade.Meta meta() {
    return ListedIndexOptionTrade.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(ListedIndexOptionTrade.Meta.INSTANCE);
  }

  @Override
  public ListedIndexOptionTrade.Meta metaBean() {
    return ListedIndexOptionTrade.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 747882564:  // listedIndexOptionType
        return getListedIndexOptionType();
      case 1373587791:  // optionType
        return getOptionType();
      case 244977400:  // buySell
        return getBuySell();
      case -771625640:  // underlyingId
        return getUnderlyingId();
      case -891985998:  // strike
        return getStrike();
      case 1032553992:  // optionExpiry
        return getOptionExpiry();
      case -466331342:  // exerciseType
        return getExerciseType();
      case -1107354437:  // numContracts
        return getNumContracts();
      case 1257391553:  // pointValue
        return getPointValue();
      case 575402001:  // currency
        return getCurrency();
      case 1989774883:  // exchange
        return getExchange();
      case 150569914:  // brokers
        return getBrokers();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @SuppressWarnings("unchecked")
  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 747882564:  // listedIndexOptionType
        setListedIndexOptionType((ListedIndexOptionType) newValue);
        return;
      case 1373587791:  // optionType
        setOptionType((OptionType) newValue);
        return;
      case 244977400:  // buySell
        setBuySell((BuySell) newValue);
        return;
      case -771625640:  // underlyingId
        setUnderlyingId((IdWrapper) newValue);
        return;
      case -891985998:  // strike
        setStrike((BigDecimal) newValue);
        return;
      case 1032553992:  // optionExpiry
        setOptionExpiry((YearMonth) newValue);
        return;
      case -466331342:  // exerciseType
        setExerciseType((ExerciseType) newValue);
        return;
      case -1107354437:  // numContracts
        setNumContracts((Integer) newValue);
        return;
      case 1257391553:  // pointValue
        setPointValue((Integer) newValue);
        return;
      case 575402001:  // currency
        setCurrency((Currency) newValue);
        return;
      case 1989774883:  // exchange
        setExchange((String) newValue);
        return;
      case 150569914:  // brokers
        setBrokers((List<Broker>) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_listedIndexOptionType, "listedIndexOptionType");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      ListedIndexOptionTrade other = (ListedIndexOptionTrade) obj;
      return JodaBeanUtils.equal(getListedIndexOptionType(), other.getListedIndexOptionType()) &&
          JodaBeanUtils.equal(getOptionType(), other.getOptionType()) &&
          JodaBeanUtils.equal(getBuySell(), other.getBuySell()) &&
          JodaBeanUtils.equal(getUnderlyingId(), other.getUnderlyingId()) &&
          JodaBeanUtils.equal(getStrike(), other.getStrike()) &&
          JodaBeanUtils.equal(getOptionExpiry(), other.getOptionExpiry()) &&
          JodaBeanUtils.equal(getExerciseType(), other.getExerciseType()) &&
          JodaBeanUtils.equal(getNumContracts(), other.getNumContracts()) &&
          JodaBeanUtils.equal(getPointValue(), other.getPointValue()) &&
          JodaBeanUtils.equal(getCurrency(), other.getCurrency()) &&
          JodaBeanUtils.equal(getExchange(), other.getExchange()) &&
          JodaBeanUtils.equal(getBrokers(), other.getBrokers()) &&
          super.equals(obj);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = 7;
    hash += hash * 31 + JodaBeanUtils.hashCode(getListedIndexOptionType());
    hash += hash * 31 + JodaBeanUtils.hashCode(getOptionType());
    hash += hash * 31 + JodaBeanUtils.hashCode(getBuySell());
    hash += hash * 31 + JodaBeanUtils.hashCode(getUnderlyingId());
    hash += hash * 31 + JodaBeanUtils.hashCode(getStrike());
    hash += hash * 31 + JodaBeanUtils.hashCode(getOptionExpiry());
    hash += hash * 31 + JodaBeanUtils.hashCode(getExerciseType());
    hash += hash * 31 + JodaBeanUtils.hashCode(getNumContracts());
    hash += hash * 31 + JodaBeanUtils.hashCode(getPointValue());
    hash += hash * 31 + JodaBeanUtils.hashCode(getCurrency());
    hash += hash * 31 + JodaBeanUtils.hashCode(getExchange());
    hash += hash * 31 + JodaBeanUtils.hashCode(getBrokers());
    return hash ^ super.hashCode();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the listedIndexOptionType.
   * @return the value of the property, not null
   */
  public ListedIndexOptionType getListedIndexOptionType() {
    return _listedIndexOptionType;
  }

  /**
   * Sets the listedIndexOptionType.
   * @param listedIndexOptionType  the new value of the property, not null
   */
  public void setListedIndexOptionType(ListedIndexOptionType listedIndexOptionType) {
    JodaBeanUtils.notNull(listedIndexOptionType, "listedIndexOptionType");
    this._listedIndexOptionType = listedIndexOptionType;
  }

  /**
   * Gets the the {@code listedIndexOptionType} property.
   * @return the property, not null
   */
  public final Property<ListedIndexOptionType> listedIndexOptionType() {
    return metaBean().listedIndexOptionType().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the optionType.
   * @return the value of the property
   */
  public OptionType getOptionType() {
    return _optionType;
  }

  /**
   * Sets the optionType.
   * @param optionType  the new value of the property
   */
  public void setOptionType(OptionType optionType) {
    this._optionType = optionType;
  }

  /**
   * Gets the the {@code optionType} property.
   * @return the property, not null
   */
  public final Property<OptionType> optionType() {
    return metaBean().optionType().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the buySell.
   * @return the value of the property
   */
  public BuySell getBuySell() {
    return _buySell;
  }

  /**
   * Sets the buySell.
   * @param buySell  the new value of the property
   */
  public void setBuySell(BuySell buySell) {
    this._buySell = buySell;
  }

  /**
   * Gets the the {@code buySell} property.
   * @return the property, not null
   */
  public final Property<BuySell> buySell() {
    return metaBean().buySell().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the underlyingId.
   * @return the value of the property
   */
  public IdWrapper getUnderlyingId() {
    return _underlyingId;
  }

  /**
   * Sets the underlyingId.
   * @param underlyingId  the new value of the property
   */
  public void setUnderlyingId(IdWrapper underlyingId) {
    this._underlyingId = underlyingId;
  }

  /**
   * Gets the the {@code underlyingId} property.
   * @return the property, not null
   */
  public final Property<IdWrapper> underlyingId() {
    return metaBean().underlyingId().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the strike.
   * @return the value of the property
   */
  public BigDecimal getStrike() {
    return _strike;
  }

  /**
   * Sets the strike.
   * @param strike  the new value of the property
   */
  public void setStrike(BigDecimal strike) {
    this._strike = strike;
  }

  /**
   * Gets the the {@code strike} property.
   * @return the property, not null
   */
  public final Property<BigDecimal> strike() {
    return metaBean().strike().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the optionExpiry.
   * @return the value of the property
   */
  public YearMonth getOptionExpiry() {
    return _optionExpiry;
  }

  /**
   * Sets the optionExpiry.
   * @param optionExpiry  the new value of the property
   */
  public void setOptionExpiry(YearMonth optionExpiry) {
    this._optionExpiry = optionExpiry;
  }

  /**
   * Gets the the {@code optionExpiry} property.
   * @return the property, not null
   */
  public final Property<YearMonth> optionExpiry() {
    return metaBean().optionExpiry().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the exerciseType.
   * @return the value of the property
   */
  public ExerciseType getExerciseType() {
    return _exerciseType;
  }

  /**
   * Sets the exerciseType.
   * @param exerciseType  the new value of the property
   */
  public void setExerciseType(ExerciseType exerciseType) {
    this._exerciseType = exerciseType;
  }

  /**
   * Gets the the {@code exerciseType} property.
   * @return the property, not null
   */
  public final Property<ExerciseType> exerciseType() {
    return metaBean().exerciseType().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the numContracts.
   * @return the value of the property
   */
  public int getNumContracts() {
    return _numContracts;
  }

  /**
   * Sets the numContracts.
   * @param numContracts  the new value of the property
   */
  public void setNumContracts(int numContracts) {
    this._numContracts = numContracts;
  }

  /**
   * Gets the the {@code numContracts} property.
   * @return the property, not null
   */
  public final Property<Integer> numContracts() {
    return metaBean().numContracts().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the pointValue.
   * @return the value of the property
   */
  public int getPointValue() {
    return _pointValue;
  }

  /**
   * Sets the pointValue.
   * @param pointValue  the new value of the property
   */
  public void setPointValue(int pointValue) {
    this._pointValue = pointValue;
  }

  /**
   * Gets the the {@code pointValue} property.
   * @return the property, not null
   */
  public final Property<Integer> pointValue() {
    return metaBean().pointValue().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the currency.
   * @return the value of the property
   */
  public Currency getCurrency() {
    return _currency;
  }

  /**
   * Sets the currency.
   * @param currency  the new value of the property
   */
  public void setCurrency(Currency currency) {
    this._currency = currency;
  }

  /**
   * Gets the the {@code currency} property.
   * @return the property, not null
   */
  public final Property<Currency> currency() {
    return metaBean().currency().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the exchange.
   * @return the value of the property
   */
  public String getExchange() {
    return _exchange;
  }

  /**
   * Sets the exchange.
   * @param exchange  the new value of the property
   */
  public void setExchange(String exchange) {
    this._exchange = exchange;
  }

  /**
   * Gets the the {@code exchange} property.
   * @return the property, not null
   */
  public final Property<String> exchange() {
    return metaBean().exchange().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the brokers.
   * @return the value of the property
   */
  public List<Broker> getBrokers() {
    return _brokers;
  }

  /**
   * Sets the brokers.
   * @param brokers  the new value of the property
   */
  public void setBrokers(List<Broker> brokers) {
    this._brokers = brokers;
  }

  /**
   * Gets the the {@code brokers} property.
   * @return the property, not null
   */
  public final Property<List<Broker>> brokers() {
    return metaBean().brokers().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code ListedIndexOptionTrade}.
   */
  public static class Meta extends Trade.Meta {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code listedIndexOptionType} property.
     */
    private final MetaProperty<ListedIndexOptionType> _listedIndexOptionType = DirectMetaProperty.ofReadWrite(
        this, "listedIndexOptionType", ListedIndexOptionTrade.class, ListedIndexOptionType.class);
    /**
     * The meta-property for the {@code optionType} property.
     */
    private final MetaProperty<OptionType> _optionType = DirectMetaProperty.ofReadWrite(
        this, "optionType", ListedIndexOptionTrade.class, OptionType.class);
    /**
     * The meta-property for the {@code buySell} property.
     */
    private final MetaProperty<BuySell> _buySell = DirectMetaProperty.ofReadWrite(
        this, "buySell", ListedIndexOptionTrade.class, BuySell.class);
    /**
     * The meta-property for the {@code underlyingId} property.
     */
    private final MetaProperty<IdWrapper> _underlyingId = DirectMetaProperty.ofReadWrite(
        this, "underlyingId", ListedIndexOptionTrade.class, IdWrapper.class);
    /**
     * The meta-property for the {@code strike} property.
     */
    private final MetaProperty<BigDecimal> _strike = DirectMetaProperty.ofReadWrite(
        this, "strike", ListedIndexOptionTrade.class, BigDecimal.class);
    /**
     * The meta-property for the {@code optionExpiry} property.
     */
    private final MetaProperty<YearMonth> _optionExpiry = DirectMetaProperty.ofReadWrite(
        this, "optionExpiry", ListedIndexOptionTrade.class, YearMonth.class);
    /**
     * The meta-property for the {@code exerciseType} property.
     */
    private final MetaProperty<ExerciseType> _exerciseType = DirectMetaProperty.ofReadWrite(
        this, "exerciseType", ListedIndexOptionTrade.class, ExerciseType.class);
    /**
     * The meta-property for the {@code numContracts} property.
     */
    private final MetaProperty<Integer> _numContracts = DirectMetaProperty.ofReadWrite(
        this, "numContracts", ListedIndexOptionTrade.class, Integer.TYPE);
    /**
     * The meta-property for the {@code pointValue} property.
     */
    private final MetaProperty<Integer> _pointValue = DirectMetaProperty.ofReadWrite(
        this, "pointValue", ListedIndexOptionTrade.class, Integer.TYPE);
    /**
     * The meta-property for the {@code currency} property.
     */
    private final MetaProperty<Currency> _currency = DirectMetaProperty.ofReadWrite(
        this, "currency", ListedIndexOptionTrade.class, Currency.class);
    /**
     * The meta-property for the {@code exchange} property.
     */
    private final MetaProperty<String> _exchange = DirectMetaProperty.ofReadWrite(
        this, "exchange", ListedIndexOptionTrade.class, String.class);
    /**
     * The meta-property for the {@code brokers} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<List<Broker>> _brokers = DirectMetaProperty.ofReadWrite(
        this, "brokers", ListedIndexOptionTrade.class, (Class) List.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
      this, (DirectMetaPropertyMap) super.metaPropertyMap(),
        "listedIndexOptionType",
        "optionType",
        "buySell",
        "underlyingId",
        "strike",
        "optionExpiry",
        "exerciseType",
        "numContracts",
        "pointValue",
        "currency",
        "exchange",
        "brokers");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 747882564:  // listedIndexOptionType
          return _listedIndexOptionType;
        case 1373587791:  // optionType
          return _optionType;
        case 244977400:  // buySell
          return _buySell;
        case -771625640:  // underlyingId
          return _underlyingId;
        case -891985998:  // strike
          return _strike;
        case 1032553992:  // optionExpiry
          return _optionExpiry;
        case -466331342:  // exerciseType
          return _exerciseType;
        case -1107354437:  // numContracts
          return _numContracts;
        case 1257391553:  // pointValue
          return _pointValue;
        case 575402001:  // currency
          return _currency;
        case 1989774883:  // exchange
          return _exchange;
        case 150569914:  // brokers
          return _brokers;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends ListedIndexOptionTrade> builder() {
      return new DirectBeanBuilder<ListedIndexOptionTrade>(new ListedIndexOptionTrade());
    }

    @Override
    public Class<? extends ListedIndexOptionTrade> beanType() {
      return ListedIndexOptionTrade.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code listedIndexOptionType} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ListedIndexOptionType> listedIndexOptionType() {
      return _listedIndexOptionType;
    }

    /**
     * The meta-property for the {@code optionType} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<OptionType> optionType() {
      return _optionType;
    }

    /**
     * The meta-property for the {@code buySell} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<BuySell> buySell() {
      return _buySell;
    }

    /**
     * The meta-property for the {@code underlyingId} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<IdWrapper> underlyingId() {
      return _underlyingId;
    }

    /**
     * The meta-property for the {@code strike} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<BigDecimal> strike() {
      return _strike;
    }

    /**
     * The meta-property for the {@code optionExpiry} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<YearMonth> optionExpiry() {
      return _optionExpiry;
    }

    /**
     * The meta-property for the {@code exerciseType} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ExerciseType> exerciseType() {
      return _exerciseType;
    }

    /**
     * The meta-property for the {@code numContracts} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Integer> numContracts() {
      return _numContracts;
    }

    /**
     * The meta-property for the {@code pointValue} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Integer> pointValue() {
      return _pointValue;
    }

    /**
     * The meta-property for the {@code currency} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Currency> currency() {
      return _currency;
    }

    /**
     * The meta-property for the {@code exchange} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> exchange() {
      return _exchange;
    }

    /**
     * The meta-property for the {@code brokers} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<List<Broker>> brokers() {
      return _brokers;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
