/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.integration.regression;

import java.util.List;
import java.util.Objects;

import com.opengamma.engine.value.ValueProperties;
import com.opengamma.id.ObjectId;
import com.opengamma.util.ArgumentChecker;

/**
 * Key for identifying values in results.
 * This is consistent across results generated by different server and database instances. The targets can
 * be positions (in which case {@link #getTargetId positionId} will be non-null) or portfolio nodes.
 */
public final class CalculationResultKey {

  private final String _calcConfigName;
  private final String _valueName;
  private final ValueProperties _properties;
  private final List<String> _path;
  private final ObjectId _targetId;

  public CalculationResultKey(String calcConfigName,
                              String valueName,
                              ValueProperties properties,
                              List<String> path,
                              ObjectId targetId) {
    ArgumentChecker.notNull(calcConfigName, "calcConfigName");
    ArgumentChecker.notNull(valueName, "valueName");
    ArgumentChecker.notNull(properties, "properties");
    _calcConfigName = calcConfigName;
    _valueName = valueName;
    _properties = properties;
    _path = path;
    _targetId = targetId;
  }

  public String getCalculationConfigurationName() {
    return _calcConfigName;
  }

  public String getValueName() {
    return _valueName;
  }

  public ValueProperties getProperties() {
    return _properties;
  }

  public List<String> getPath() {
    return _path;
  }

  public ObjectId getTargetId() {
    return _targetId;
  }

  @Override
  public int hashCode() {
    return Objects.hash(_calcConfigName, _valueName, _properties, _path, _targetId);
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null || getClass() != obj.getClass()) {
      return false;
    }
    final CalculationResultKey other = (CalculationResultKey) obj;
    return Objects.equals(this._calcConfigName, other._calcConfigName) &&
        Objects.equals(this._valueName, other._valueName) &&
        Objects.equals(this._properties, other._properties) &&
        Objects.equals(this._path, other._path) &&
        Objects.equals(this._targetId, other._targetId);
  }
}
