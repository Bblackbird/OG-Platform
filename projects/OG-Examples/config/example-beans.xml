<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!--  import resources from OG-Util -->
  <import resource="classpath:com/opengamma/transport/jaxrs/beans.xml" />

  <!-- Property file configuration -->
  <bean id="beansProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="locations">
      <list>
        <value>classpath:engine-spring.properties</value>
      </list>
    </property>
  </bean>
  
  <!-- Bundle Property file configuration -->
  <bean id="bundleProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="location">
      <value>classpath:bundle.properties</value>
    </property>
  </bean>
  
  <import resource="classpath:demoViewProcessor.xml" />
  
  <!-- Historical data source service -->
  <bean id="historicalDataSourceRestBean" class="com.opengamma.financial.historicaldata.rest.HistoricalDataSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="sharedHistoricalDataProvider" />
  </bean>
  
  <!-- View processor service -->
  <bean id="viewProcessorRestBean" class="com.opengamma.financial.view.rest.RestViewProcessorFactoryBean">
    <property name="viewProcessor" ref="demoViewProcessor" />
    <property name="connectionFactory" ref="activeMQConnectionFactory" />
    <property name="fudgeContext" ref="fudgeContext" />
    <property name="executorService" ref="scheduler" />
  </bean>
  
  <!-- Security source/master service -->
  <bean id="testSecurityMaster" class="com.opengamma.master.security.impl.InMemorySecurityMaster" />
  <bean id="securitySourceRestBean" class="com.opengamma.financial.rest.security.SecuritySourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="combinedSecuritySource" />
        <entry key="shared" value-ref="sharedSecuritySource" />
        <entry key="user" value-ref="userFinancialSecuritySource" />
        <entry key="test">
          <bean class="com.opengamma.financial.security.MasterFinancialSecuritySource">
            <constructor-arg ref="testSecurityMaster" />
          </bean>
        </entry>
      </map>
    </property>
  </bean>
  <bean id="securityMasterRestBean" class="com.opengamma.financial.security.rest.SecurityMasterService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="dbSecurityMaster" />
        <entry key="test" value-ref="testSecurityMaster" />
      </map>
    </property>
  </bean>
  
  <!-- Function repository configuration -->
  <bean id="functionRepositoryConfigurationRestBean" class="com.opengamma.financial.function.rest.RepositoryConfigurationSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="demoFunctionRepositoryConfiguration" />
  </bean>
  
  <!-- Position source -->
  <bean id="dataPositionSourceRestBean" class="com.opengamma.engine.position.rest.DataPositionSourceResource">
    <constructor-arg ref="fudgeContext" />
    <constructor-arg ref="combinedPositionSource" />
  </bean>
  
  <!-- Currency conversions -->
  <bean id="currencyMatrixSourceRestBean" class="com.opengamma.financial.currency.rest.CurrencyMatrixSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="sharedCurrencyMatrixSource" />
  </bean>
  
  <!-- Ad hoc batches -->
  <bean id="adHocBatchRestBean" class="com.opengamma.financial.batch.AdHocBatchDbManagerService">
    <constructor-arg ref="dbBatchMaster" />
    <constructor-arg ref="fudgeContext" />
  </bean>
  
  <!-- Curves service -->
  <bean id="testInterpolatedYieldCurveDefinitions" class="com.opengamma.financial.analytics.ircurve.InMemoryInterpolatedYieldCurveDefinitionMaster">
    <property name="identifierScheme" value="TestCurves" />
  </bean>
  <bean id="interpolatedYieldCurveDefinitionSourceRestBean" class="com.opengamma.financial.analytics.ircurve.rest.InterpolatedYieldCurveDefinitionSourceService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="combinedInterpolatedYieldCurveDefinitionSource" />
        <entry key="shared" value-ref="sharedInterpolatedYieldCurveDefinitionSource" />
        <entry key="user" value-ref="userInterpolatedYieldCurveDefinitions" />
        <entry key="test" value-ref="testInterpolatedYieldCurveDefinitions" />
      </map>
    </property>
  </bean>
  <bean id="interpolatedYieldCurveDefinitionMasterRestBean" class="com.opengamma.financial.analytics.ircurve.rest.InterpolatedYieldCurveDefinitionMasterService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="user" value-ref="userInterpolatedYieldCurveDefinitions" />
        <entry key="test" value-ref="testInterpolatedYieldCurveDefinitions" />
      </map>
    </property>
  </bean>
  <bean id="interpolatedYieldCurveSpecificationBuilderRestBean" class="com.opengamma.financial.analytics.ircurve.rest.InterpolatedYieldCurveSpecificationBuilderService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlying" ref="sharedInterpolatedYieldCurveSpecificationBuilder" />
  </bean>
  
  <!--  User supplied data -->
  <bean id="usersRestBean" class="com.opengamma.financial.user.rest.UsersResource">
    <constructor-arg>
      <bean class="com.opengamma.financial.user.rest.UsersResourceContext">
        <property name="fudgeContext" ref="fudgeContext" />
        <property name="userPortfolioMaster" ref="userFinancialPortfolioMaster" />
        <property name="userPositionMaster" ref="userFinancialPositionMaster" />
        <property name="userSecurityMaster" ref="userFinancialSecurityMaster" />
        <property name="userViewDefinitionRepository" ref="userViewDefinitionRepository" />
        <property name="userInterpolatedYieldCurveDefinitionMaster" ref="userInterpolatedYieldCurveDefinitions" />
        <property name="userSnapshotMaster" ref="userFinancialSnapshotMaster" />
      </bean>
    </constructor-arg>
  </bean>
  <bean id="usersRestBeanCleaner" factory-bean="usersRestBean" factory-method="createDeleteTask">
    <property name="timeout" value="${opengamma.financial-user.timeout}" />
    <property name="scheduler" ref="scheduler" />
  </bean>

  <!-- Root RESTful service -->
  <bean id="webHomeRestBean" class="com.opengamma.web.WebHomeResource" scope="request">
  </bean>
  
  <!-- Securities RESTful service -->
  <bean id="webSecuritiesRestBean" class="com.opengamma.web.security.WebSecuritiesResource" scope="request">
    <constructor-arg ref="dbSecurityMaster" />
    <constructor-arg ref="mockSecurityLoader"/>
  </bean>
  
  <!-- Portfolios RESTful service -->
  <bean id="dataPortfoliosRestBean" class="com.opengamma.financial.portfolio.rest.DataPortfoliosResource">
    <constructor-arg ref="dbPortfolioMaster" />
  </bean>
  <bean id="webPortfoliosRestBean" class="com.opengamma.web.portfolio.WebPortfoliosResource" scope="request">
    <constructor-arg ref="dbPortfolioMaster" />
    <constructor-arg ref="dbPositionMaster" />
  </bean>

  <!-- Positions RESTful service -->
  <bean id="dataPositionsRestBean" class="com.opengamma.financial.position.rest.DataPositionsResource">
    <constructor-arg ref="dbPositionMaster" />
  </bean>
  <bean id="webPositionsRestBean" class="com.opengamma.web.position.WebPositionsResource" scope="request">
    <constructor-arg ref="dbPositionMaster" />
    <constructor-arg ref="mockSecurityLoader"/>
    <constructor-arg ref="sharedSecuritySource"/>
  </bean>
  
  <!-- Exchanges RESTful service -->
  <bean id="webExchangesRestBean" class="com.opengamma.web.exchange.WebExchangesResource" scope="request">
    <constructor-arg ref="dbExchangeMaster" />
  </bean>
  
  <!-- Holidays RESTful service -->
  <bean id="webHolidaysRestBean" class="com.opengamma.web.holiday.WebHolidaysResource" scope="request">
    <constructor-arg ref="dbHolidayMaster" />
  </bean>
  
  <!-- Exchanges RESTful service -->
  <bean id="webRegionsRestBean" class="com.opengamma.web.region.WebRegionsResource" scope="request">
    <constructor-arg ref="regionMaster" />
  </bean>
  
  <!-- Distributed component configuration data -->
  <bean id="configurationResource" class="com.opengamma.util.rest.ConfigurationResource">
    <constructor-arg ref="fudgeContext" />
    <constructor-arg>
      <map>
        <entry key="0">
          <map>
            <entry key="currencyMatrixSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/currencyMatrixSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="functionRepositoryConfiguration">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/repositoryConfigurationSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="adHocBatchDbManager">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/adHocBatchDbManager/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="historicalData">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/historicalDataSource/0/" />
                  <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="interpolatedYieldCurveDefinitionSource"> 
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/interpolatedYieldCurveDefinitionSource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="interpolatedYieldCurveSpecificationBuilder">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/interpolatedYieldCurveSpecificationBuilder/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="positionSource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/positionSource/" />
                  <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="remoteCalcNode" value-ref="calcNodeSocketConfig" />
            <entry key="securitySource">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/securitySource/0/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
            <entry key="userData">
              <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
                <property name="local" value="/jax/data/users/" />
                <property name="port" value="${jetty.port}" />
              </bean>
            </entry>
          <entry key="viewProcessor">
            <bean class="com.opengamma.transport.jaxrs.UriEndPointDescriptionProviderFactoryBean">
              <property name="local" value="/jax/data/viewProcessors/Vp~0/" />
              <property name="port" value="${jetty.port}" />
            </bean>
          </entry>
          <entry key="activeMQ">
            <value>${activeMQ.brokerURL}</value>
          </entry>
          </map>
        </entry>
        <!-- THESE ARE FOR CONVENIENT DEBUGGING ONLY; REMOVE WHEN JMX WORK IS DONE -->
        <!-- ENG-154 -->
        <entry key="jobDispatchStatistics" value-ref="jobDispatchStatistics" />
        <entry key="graphExecutionStatistics" value-ref="graphExecutionStatistics" />
        <!-- ENG-240 & ENG-248 -->
        <entry key="executorTuner" value-ref="graphExecutorTuner" />
        <!-- DVI-135; remove when there are remote implementations of all sources -->
        <entry key="DVI-135">
          <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="location">
              <value>classpath:demoIntegrationMasters-shareddev.properties</value>
            </property>
          </bean>
        </entry>
      </map>
    </constructor-arg>
  </bean>
  
  <!-- Config RESTful service -->
  <bean id="webConfigsRestBean" class="com.opengamma.web.config.WebConfigsResource" scope="request">
    <constructor-arg ref="sharedConfigMaster" />
  </bean>
  
  <!-- Time series RESTful service -->
  <bean id="webTimeSeriesRestBean" class="com.opengamma.web.timeseries.WebAllTimeSeriesResource" scope="request">
    <constructor-arg ref="timeseriesMaster" />
    <constructor-arg ref="mockTimeseriesLoader"/>
  </bean>
  
  <!-- Batch RESTful service -->
  <bean id="webBatchesRestBean" class="com.opengamma.web.batch.WebBatchesResource" scope="request">
    <constructor-arg ref="batchDbManager" />
  </bean>
  
  <!-- Bundles RESTful service -->
  <bean id="bundleManager" class="com.opengamma.web.spring.BundleManagerFactoryBean">
    <property name="configFile" value="classpath:${bundle.xml}" />
    <property name="baseDir" value="${bundle.basedir}" />
  </bean>
  
  <bean id="yuiCompressorOptions" class="com.opengamma.web.bundle.YUICompressorOptions">
    <property name="lineBreakPosition" value="${yuiCompressorOptions.lineBreakPosition}" />
    <property name="munge" value="${yuiCompressorOptions.munge}" />
    <property name="preserveAllSemiColons" value="${yuiCompressorOptions.preserveAllSemiColons}" />
    <property name="optimize" value="${yuiCompressorOptions.optimize}" />
    <property name="warn" value="${yuiCompressorOptions.warn}" />
  </bean>
  
  <bean id="bundleCompressor" class="com.opengamma.web.bundle.EHCachingBundleCompressor">
    <constructor-arg>
      <bean class="com.opengamma.web.bundle.YUIBundleCompressor">
        <constructor-arg ref="yuiCompressorOptions" />
      </bean>
    </constructor-arg>
    <constructor-arg ref="cacheManager" />
  </bean>
  
  <bean id="webBundlesRestBean" class="com.opengamma.web.bundle.WebBundlesResource" scope="request">
    <constructor-arg ref="bundleManager" />
    <constructor-arg ref="bundleCompressor" />
    <constructor-arg value="${bundle.mode}"/>
  </bean>
  
  <!-- Web-interface -->
  <bean id="webInterfaceBean" class="com.opengamma.web.server.LiveResultsServiceBean">
    <property name="user" ref="testUser" />
    <property name="viewProcessor" ref="demoViewProcessor" />
    <property name="executorService">
      <bean class="com.opengamma.util.ExecutorServiceFactoryBean">
        <property name="styleName" value="CACHED" />
      </bean>
    </property>
    <property name="fudgeContext" ref="fudgeContext" />
  </bean>
  
  <!-- MarketDataSnapshot source/master service -->
  <bean id="testSnapshotMaster" class="com.opengamma.master.marketdatasnapshot.impl.InMemorySnapshotMaster" />
  <bean id="snapshotSourceRestBean" class="com.opengamma.financial.marketdatasnapshot.rest.MarketDataSnapshotService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="combinedSnapshotSource" />
        <entry key="shared" value-ref="sharedSnapshotSource" />
        <entry key="user" value-ref="userFinancialSnapshotSource" />
        <entry key="test">
          <bean class="com.opengamma.financial.snapshot.MasterFinancialSnapshotSource">
            <constructor-arg ref="testSnapshotMaster" />
          </bean>
        </entry>
      </map>
    </property>
  </bean>
  <bean id="snapshotMasterRestBean" class="com.opengamma.financial.marketdatasnapshot.rest.MarketDataSnapshotService">
    <constructor-arg ref="fudgeContext" />
    <property name="underlyingMap">
      <map>
        <entry key="0" value-ref="dbSnapshotMaster" />
        <entry key="test" value-ref="testSnapshotMaster" />
      </map>
    </property>
  </bean>
</beans>
