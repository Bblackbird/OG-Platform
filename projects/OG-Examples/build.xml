<project name="og-examples" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property file="build.properties"/>

	<import file="${common.dir}/common.xml"/>

	<!-- Targets used to locate script directories. These will be unnecessary once scripts are included in jars. -->

	<import file="${common.dir}/../git-macros.xml" />

	<macrodef name="check-dev-dir">
		<attribute name="project" />
		<attribute name="property" />
		<sequential>
			<available type="dir" file="${projects.dir}/@{project}" property="@{property}.dir" value="${projects.dir}/@{project}" />
		</sequential>
	</macrodef>

	<macrodef name="get-from-git">
		<attribute name="project" />
		<attribute name="property" />
		<sequential>
			<property name="@{property}.dir" value="${basedir}/temp/OG-Platform/projects/@{project}" />
			<echo message="Cloning/pulling from git@github.com:OpenGamma/OG-Platform.git" />
			<git-clone repository="git@github.com:OpenGamma/OG-Platform" dest="${basedir}/temp/OG-Platform" />
			<git-pull dest="${basedir}/temp/OG-Platform" />
		</sequential>
	</macrodef>

	<target name="check-og-masterdb-dev" unless="og-masterdb.dir">
		<check-dev-dir project="OG-MasterDB" property="og-masterdb" />
	</target>

	<target name="check-og-masterdb-git" unless="og-masterdb.dir">
		<get-from-git project="OG-MasterDB" property="og-masterdb" />
	</target>

	<target name="find-og-masterdb-dir" depends="check-og-masterdb-dev,check-og-masterdb-git">
		<echo message="OG-MasterDB directory located at ${og-masterdb.dir}" />
	</target>

	<!-- End of targets used to locate script directories -->

	<target name="new-hsqldb-impl">
		<new-hsqldb-db path="${basedir}/install/db/hsqldb/example-db" scriptdir="${basedir}" catalog="og-financial" />
	</target>

	<target name="new-user-financial-db" depends="find-og-masterdb-dir,jetty-stop">
		<new-hsqldb-db path="${basedir}/temp/hsqldb/og-fin-user" scriptdir="${og-masterdb.dir}" catalog="og-financial" /> <!-- scriptdir was og-masterdb.dir, maybe should be moved -->
	</target>

	<target name="new-hsqldb" depends="resolve,new-hsqldb-impl,new-user-financial-db" description="--> creates the hsqldb tables" />

	<!-- NOTE jonathan 2011-02-04 - Note that that the following Jetty targets operate only on web-engine, not web-marketdata -->

	<target name="jetty-resolve" depends="load-ivy">
		<ivy:resolve inline="true" organisation="org.eclipse" module="jetty" revision="7.0.1+" conf="start" />
		<ivy:retrieve pattern="${lib.dir}/[type]/[organization]/[module]/[artifact]-[revision].[ext]" />
	</target>

	<target name="jetty-properties" depends="jetty-resolve">
		<property name="jetty.spawn" value="true" />
		<property name="jetty.stopport" value="8079" />
		<property name="jetty.stopkey" value="OpenGamma" />
		<property name="jetty.config" value="standalone" />
		<property name="jvm.xms" value="1024m" />
		<property name="jvm.xmx" value="4096m" />
		<path id="jetty.start.path">
			<fileset dir="${lib.dir}/jar/org.eclipse/jetty">
				<include name="jetty-start-*.jar" />
			</fileset>
		</path>
		<property name="jetty.start" value="${toString:jetty.start.path}" />
	</target>

	<path id="jetty.run.path">
		<pathelement path="${basedir}/config" />
		<path refid="run.path.id" />
		<fileset dir="${lib.dir}/resource/com.opengamma/og-financial">
			<include name="*.zip" />
		</fileset>
		<fileset dir="${lib.dir}/resource/com.opengamma/og-web">
			<include name="*.zip" />
		</fileset>
	</path>

	<target name="jetty-debug" depends="compile-src,jetty-stop" description="--> start the project's web-engine/ folder with Jetty and block waiting for output">
		<java jar="${jetty.start}" fork="true" spawn="false">
			<jvmarg value="-Dlogback.configurationFile=${junit.logback}" />
			<jvmarg value="-DSTOP.PORT=${jetty.stopport}" />
			<jvmarg value="-DSTOP.KEY=${jetty.stopkey}" />
			<jvmarg value="-Dopengamma.platform.runmode=example" />
			<jvmarg value="-Dopengamma.platform.marketdatasource=direct" />
			<jvmarg value="-Dopengamma.platform.os=posix" />
			<jvmarg value="-Xms${jvm.xms}" />
			<jvmarg value="-Xmx${jvm.xmx}" />
			<arg value="start.class=com.opengamma.examples.startup.ExampleServer" />
			<arg value="${basedir}${file.separator}config${file.separator}engine-spring.xml" />
			<arg value="path=${toString:jetty.run.path}" />
		</java>
	</target>

	<target name="jetty" depends="compile-src,jetty-stop" description="--> start the project's web-engine/ folder with Jetty">
		<java jar="${jetty.start}" fork="true" spawn="${jetty.spawn}">
			<jvmarg value="-Dlogback.configurationFile=${jetty.logback}" />
			<jvmarg value="-DSTOP.PORT=${jetty.stopport}" />
			<jvmarg value="-DSTOP.KEY=${jetty.stopkey}" />
			<jvmarg value="-Dopengamma.platform.runmode=shareddev" />
			<jvmarg value="-Dopengamma.platform.marketdatasource=direct" />
			<jvmarg value="-Dopengamma.platform.os=posix" />
			<jvmarg value="-Xms${jvm.xms}" />
			<jvmarg value="-Xmx${jvm.xmx}" />
			<arg value="start.class=com.opengamma.examples.startup.ExampleServer" />
			<arg value="${basedir}${file.separator}config${file.separator}engine-spring.xml" />
			<arg value="path=${toString:jetty.run.path}" />
		</java>
	</target>

	<target name="jetty-stop" depends="jetty-properties" description="--> stop the current Jetty runner">
		<java jar="${jetty.start}" fork="true" outputproperty="jetty.stop.output">
			<jvmarg value="-DSTOP.KEY=${jetty.stopkey}" />
			<jvmarg value="-DSTOP.PORT=${jetty.stopport}" />
			<arg value="--stop" />
			<arg value="${basedir}${file.separator}config${file.separator}jetty-${jetty.config}.xml" />
			<arg value="path=${toString:run.path.id}" />
		</java>
		<condition property="jetty.stop.status" value="Stopping Jetty server (stop port ${jetty.stopport})" else="">
			<not>
				<contains string="${jetty.stop.output}" substring="ERROR" />
			</not>
		</condition>
		<echo>${jetty.stop.status}</echo>
	</target>

	<property name="webapp.dir" value="${lib.dir}/webapp/com.opengamma/og-web" />
	<target name="dist-common" depends="common.dist-common,new-hsqldb">
		<unzip dest="${dist.dir}/${dist.name}" overwrite="false">
			<fileset dir="${webapp.dir}">
				<include name="*.zip" />
			</fileset>
		</unzip>

		<delete dir="${dist.dir}/${dist.name}/lib/webapp" failonerror="false" />

		<replace file="${dist.dir}/${dist.name}/config/${overridefile.name}" token="webAppContext.resourceBase=../OG-Web/web-engine" value="webAppContext.resourceBase=web-engine" />
		<replace file="${dist.dir}/${dist.name}/config/${overridefile.name}" token="webAppContext.descriptor=../OG-Web/web-engine/WEB-INF/web.xml" value="webAppContext.descriptor=web-engine/WEB-INF/web.xml" />

		<copy todir="${dist.dir}/${dist.name}/install/db/hsqldb" failonerror="true">
			<fileset dir="${basedir}/install/db/hsqldb">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>

	<target name="ivy-report" description="generate ivy dependency report" depends="publish-local">
		<ivy:report organisation="com.opengamma" module="og-examples" dot="true" />
	</target>

	<target name="test-batch" depends="new-hsqldb-impl, common.test-batch"/>

</project>
