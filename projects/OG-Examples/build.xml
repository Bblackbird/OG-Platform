<project name="og-examples" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property file="build.properties"/>

	<import file="${common.dir}/common.xml"/>

	<target name="new-hsqldb" depends="compile-src">
		<new-hsqldb-db path="${basedir}/temp/hsqldb/example-db" scriptdir="${basedir}" catalog="og-financial" />
	</target>

	<!-- NOTE jonathan 2011-02-04 - Note that that the following Jetty targets operate only on web-engine, not web-marketdata -->

	<target name="jetty-resolve" depends="load-ivy">
		<ivy:resolve inline="true" organisation="org.eclipse" module="jetty" revision="7.0.1+" conf="start" />
		<ivy:retrieve pattern="${lib.dir}/[type]/[organization]/[module]/[artifact]-[revision].[ext]" />
	</target>

	<target name="jetty-properties" depends="jetty-resolve">
		<property name="jetty.port" value="8080" />
		<property name="jetty.spawn" value="true" />
		<property name="jetty.stopport" value="8079" />
		<property name="jetty.stopkey" value="OpenGamma" />
		<property name="jetty.config" value="standalone" />
		<property name="jvm.xms" value="1024m" />
		<property name="jvm.xmx" value="4096m" />
		<path id="jetty.start.path">
			<fileset dir="${lib.dir}/jar/org.eclipse/jetty">
				<include name="jetty-start-*.jar" />
			</fileset>
		</path>
		<property name="jetty.start" value="${toString:jetty.start.path}" />
	</target>

	<target name="jetty-debug" depends="compile-src,jetty-stop" description="--> start the project's web-engine/ folder with Jetty and block waiting for output">
		<echo>Server starting on port ${jetty.port}</echo>
		<java jar="${jetty.start}" fork="true" spawn="false">
			<jvmarg value="-Djetty.port=${jetty.port}" />
			<jvmarg value="-Dlogback.configurationFile=${junit.logback}" />
			<jvmarg value="-DSTOP.PORT=${jetty.stopport}" />
			<jvmarg value="-DSTOP.KEY=${jetty.stopkey}" />
			<jvmarg value="-Dopengamma.platform.runmode=shareddev" />
			<jvmarg value="-Dopengamma.platform.marketdatasource=direct" />
			<jvmarg value="-Dopengamma.platform.os=posix" />
			<jvmarg value="-Xms${jvm.xms}" />
			<jvmarg value="-Xmx${jvm.xmx}" />
			<arg value="start.class=com.opengamma.integration.startup.EngineServer" />
			<arg value="${basedir}${file.separator}config${file.separator}engine-spring.xml" />
			<arg value="path=${basedir}${file.separator}config${path.separator}${toString:run.path.id}" />
		</java>
	</target>

	<target name="jetty" depends="compile-src,jetty-stop" description="--> start the project's web-engine/ folder with Jetty">
		<echo>Server starting on port ${jetty.port}</echo>
		<java jar="${jetty.start}" fork="true" spawn="${jetty.spawn}">
			<jvmarg value="-Djetty.port=${jetty.port}" />
			<jvmarg value="-Dlogback.configurationFile=${junit.logback}" />
			<jvmarg value="-DSTOP.PORT=${jetty.stopport}" />
			<jvmarg value="-DSTOP.KEY=${jetty.stopkey}" />
			<jvmarg value="-Dopengamma.platform.runmode=shareddev" />
			<jvmarg value="-Dopengamma.platform.marketdatasource=direct" />
			<jvmarg value="-Dopengamma.platform.os=posix" />
			<jvmarg value="-Xms${jvm.xms}" />
			<jvmarg value="-Xmx${jvm.xmx}" />
			<arg value="start.class=com.opengamma.integration.startup.EngineServer" />
			<arg value="${basedir}${file.separator}config${file.separator}engine-spring.xml" />
			<arg value="path=${basedir}${file.separator}config${path.separator}${toString:run.path.id}" />
		</java>
	</target>

	<target name="jetty-stop" depends="jetty-properties" description="--> stop the current Jetty runner">
		<java jar="${jetty.start}" fork="true" outputproperty="jetty.stop.output">
			<jvmarg value="-DSTOP.KEY=${jetty.stopkey}" />
			<jvmarg value="-DSTOP.PORT=${jetty.stopport}" />
			<arg value="--stop" />
			<arg value="${basedir}${file.separator}config${file.separator}jetty-${jetty.config}.xml" />
			<arg value="path=${toString:run.path.id}" />
		</java>
		<condition property="jetty.stop.status" value="Stopping Jetty server (stop port ${jetty.stopport})" else="">
			<not>
				<contains string="${jetty.stop.output}" substring="ERROR" />
			</not>
		</condition>
		<echo>${jetty.stop.status}</echo>
	</target>

	<!-- Overrides common.xml zipfile -->
	<property name="type" value="zip" />
	<property name="org" value="com.opengamma" />
	<property name="name" value="og-web" />
	<property name="webapp.dir" value="web-engine" />
	<property name="engine-spring.name" value="engine-spring.xml" />

	<target name="zipfile" depends="dist">
		<move file="${dist.dir}/${dist.name}/${webapp.dir}/WEB-INF/classes/engine.properties" toFile="${dist.dir}/temp.properties" overwrite="true">
			<filterset begintoken="$${" endtoken="}">
				<filter token="user.name" value="devsvr"/>
			</filterset>
		</move>
		<move file="${dist.dir}/temp.properties" toFile="${dist.dir}/${dist.name}/web-engine/WEB-INF/classes/engine.properties" overwrite="true" />
		<zip destfile="${dist.dir}/${dist.name}-${version}.zip" basedir="${dist.dir}">
			<include name="${dist.name}/**/*" />
		</zip>
	</target>

	<target name="dist" depends="common.dist">
		<unzip dest="${dist.dir}/${dist.name}/${webapp.dir}" overwrite="false">
			<fileset dir="${lib.dir}/${type}/${org}/${name}">
				<include name="*.zip" />
			</fileset>
		</unzip>
		<!-- rename web-app directory -->
		<move file="${dist.dir}/${dist.name}/config/engine-defaults.properties" toFile="${dist.dir}/${dist.name}/config/engine-spring.properties" overwrite="true"/>

		<copy todir="${dist.dir}/${dist.name}/temp/hsqldb" failonerror="true">
			<fileset dir="${basedir}/temp/hsqldb">
				<include name="og-fin-user*" />
			</fileset>
		</copy>
	</target>



</project>
