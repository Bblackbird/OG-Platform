<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:server.properties</value>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager"/>

    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <bean factory-bean="dbSource" factory-method="getHibernateSessionFactory"/>
        </property>
	</bean>

	<bean id="entitlementChecker" class="com.opengamma.livedata.entitlement.UserEntitlementChecker">
		<constructor-arg index="0">
			<bean class="com.opengamma.security.user.HibernateUserManager">
				<constructor-arg ref="dbSource" />
			</bean>
		</constructor-arg>
		<constructor-arg index="1" ref="distributionSpecificationResolver"/>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="${jdbc.driverClassName}"/>
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
  	</bean>
	
    <bean id="dbSource" class="com.opengamma.util.db.DbSourceFactoryBean">
        <property name="name" value="${dbsource.name}"/>
        <property name="hibernateMappingFiles">
            <list>
                <bean class="com.opengamma.security.user.HibernateUserManagerFiles"/>
            </list>
        </property>
        <property name="dataSource" ref="dataSource"/>
        <property name="dialect" value="${opengamma.db.dialect}"/>
    </bean>
    
	<bean id="subscriptionRequestReceiver" class="com.opengamma.livedata.server.SubscriptionRequestReceiver">
		<constructor-arg index="0" ref="server"/>
	</bean>
	
	<bean id="subscriptionRequestDispatcher" class="com.opengamma.transport.FudgeRequestDispatcher">
		<constructor-arg index="0" ref="subscriptionRequestReceiver"/>
	</bean>
	
	<bean id="subscriptionRequestJmsReceiver" class="com.opengamma.transport.jms.JmsByteArrayRequestDispatcher">
		<constructor-arg index="0" ref="subscriptionRequestDispatcher"/>	
	</bean>

	<bean id="activeMqTransportListener" class="com.opengamma.livedata.server.distribution.ActiveMQTransportListener">
		<constructor-arg index="0" ref="jmsSenderFactory"/>
	</bean>

	<bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${activeMQ.brokerURL}" />
		<property name="transportListener" ref="activeMqTransportListener" />
	</bean>
	
	<bean id="jmsConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<constructor-arg ref="activeMQConnectionFactory"/>			
	</bean>

	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsConnectionFactory"/>
    	<property name="destination">
			<bean class="org.apache.activemq.command.ActiveMQTopic">
				<constructor-arg value="${subscriptionrequest.topic.name}" />
			</bean>
    	</property>
    	<property name="messageListener" ref="subscriptionRequestJmsReceiver" />
    	<property name="autoStartup" value="false" />
	</bean>

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
		<property name="pubSubDomain" value="true"/>
	</bean>
	
	<bean id="jmsSenderFactory" class="com.opengamma.livedata.server.distribution.JmsSenderFactory">
		<property name="jmsTemplate" ref="jmsTemplate"/>
	</bean>
	
	<bean id="activeSecurityPublicationManager" class="com.opengamma.livedata.server.ExpirationManager">
		<constructor-arg ref="server"/>
	</bean>
	
	<bean id="heartbeatReceiver" class="com.opengamma.livedata.server.HeartbeatReceiver">
		<constructor-arg ref="activeSecurityPublicationManager"/>
	</bean>
	
	<bean id="heartbeatJmsReceiver" class="com.opengamma.transport.jms.JmsByteArrayMessageDispatcher">
		<constructor-arg index="0" ref="heartbeatReceiver"/>	
	</bean>

	<bean id="heartbeatJmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsConnectionFactory"/>
    	<property name="destination">
			<bean class="org.apache.activemq.command.ActiveMQTopic">
				<constructor-arg value="${heartbeat.topic.name}" />
			</bean>
    	</property>
    	<property name="messageListener" ref="subscriptionRequestJmsReceiver" />
    	<property name="autoStartup" value="false" />
	</bean>
	
	<bean id="mongoDBSettings" class="com.opengamma.util.MongoDBConnectionSettings">
        <property name="host" value="${mongodb.host}" />
        <property name="port" value="${mongodb.port}" />
        <property name="database" value="${mongodb.db.name}" />
    </bean>
	
	<bean id="persistentSubscriptionManager" class="com.opengamma.livedata.server.MongoDBPersistentSubscriptionManager"
		depends-on="server">
		<constructor-arg index="0" ref="server"/>
		<constructor-arg index="1" ref="mongoDBSettings"/>
	</bean>
	
	<bean id="reconnectManager" class="com.opengamma.livedata.server.ReconnectManager"
		depends-on="server">
		<constructor-arg index="0" ref="server"/>
	</bean>
	
	<bean id="entitlementJmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    	<property name="connectionFactory" ref="jmsConnectionFactory"/>
    	<property name="destination">
			<bean class="org.apache.activemq.command.ActiveMQTopic">
				<constructor-arg value="${entitlementrequest.topic.name}" />
			</bean>
    	</property>
    	<property name="messageListener" ref="entitlementRequestJmsReceiver" />
    	<property name="autoStartup" value="false" />
	</bean>
	
	<bean id="entitlementRequestJmsReceiver" class="com.opengamma.transport.jms.JmsByteArrayRequestDispatcher">
		<constructor-arg index="0" ref="entitlementRequestDispatcher"/>	
	</bean>
	
	<bean id="entitlementRequestDispatcher" class="com.opengamma.transport.FudgeRequestDispatcher">
		<constructor-arg index="0" ref="entitlementServer"/>
	</bean>
	
	<bean id="entitlementServer" class="com.opengamma.livedata.entitlement.EntitlementServer">
		<constructor-arg index="0" ref="entitlementChecker"/>
	</bean>
	
	<!-- JMX beans -->
	
	<bean id="jmxAttributeSource"
	        class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource"/>
	
	<bean id="jmxAssembler"
          class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="jmxAttributeSource"/>
    </bean>

    <bean id="jmxNamingStrategy"
          class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
        <property name="attributeSource" ref="jmxAttributeSource"/>
    </bean>
	
	<bean id="jmxExporter" class="org.springframework.jmx.export.MBeanExporter">
		<property name="assembler" ref="jmxAssembler"/>
        <property name="namingStrategy" ref="jmxNamingStrategy"/>
        <property name="autodetect" value="true"/>
	</bean>
	
	<bean id="serverMBean" class="com.opengamma.livedata.server.LiveDataServerMBean">
		<constructor-arg ref="server"/>
	</bean>
	
	<bean id="persistentSubscriptionManagerMBean" class="com.opengamma.livedata.server.PersistentSubscriptionManagerMBean">
		<constructor-arg ref="persistentSubscriptionManager"/>
	</bean>
	
</beans>