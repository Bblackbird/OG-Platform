/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.master.timeseries;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

import org.joda.beans.BeanDefinition;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.BasicMetaBean;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectMetaProperty;

import com.opengamma.id.UniqueIdentifier;

/**
 * A document used to update a data point in a time-series.
 * 
 * @param <T> LocalDate/java.util.Date depending on whether this is a
 *  daily or an intraday time series
 */
@BeanDefinition
public class DataPointDocument<T> extends DirectBean {

  /**
   * The parent time-series object identifier.
   */
  @PropertyDefinition
  private UniqueIdentifier _timeSeriesId;
  /**
   * The data point unique identifier.
   */
  @PropertyDefinition
  private UniqueIdentifier _dataPointId;
  /**
   * The date the value refers to.
   */
  @PropertyDefinition
  private T _date;
  /**
   * The time-series value
   */
  @PropertyDefinition
  private Double _value;

  /**
   * Creates an instance.
   */
  public DataPointDocument() {
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code DataPointDocument}.
   * @param <R>  the bean's generic type
   * @return the meta-bean, not null
   */
  @SuppressWarnings("unchecked")
  public static <R> DataPointDocument.Meta<R> meta() {
    return DataPointDocument.Meta.INSTANCE;
  }

  @SuppressWarnings("unchecked")
  @Override
  public DataPointDocument.Meta<T> metaBean() {
    return DataPointDocument.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName) {
    switch (propertyName.hashCode()) {
      case 1709694943:  // timeSeriesId
        return getTimeSeriesId();
      case -1881813055:  // dataPointId
        return getDataPointId();
      case 3076014:  // date
        return getDate();
      case 111972721:  // value
        return getValue();
    }
    return super.propertyGet(propertyName);
  }

  @SuppressWarnings("unchecked")
  @Override
  protected void propertySet(String propertyName, Object newValue) {
    switch (propertyName.hashCode()) {
      case 1709694943:  // timeSeriesId
        setTimeSeriesId((UniqueIdentifier) newValue);
        return;
      case -1881813055:  // dataPointId
        setDataPointId((UniqueIdentifier) newValue);
        return;
      case 3076014:  // date
        setDate((T) newValue);
        return;
      case 111972721:  // value
        setValue((Double) newValue);
        return;
    }
    super.propertySet(propertyName, newValue);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the parent time-series object identifier.
   * @return the value of the property
   */
  public UniqueIdentifier getTimeSeriesId() {
    return _timeSeriesId;
  }

  /**
   * Sets the parent time-series object identifier.
   * @param timeSeriesId  the new value of the property
   */
  public void setTimeSeriesId(UniqueIdentifier timeSeriesId) {
    this._timeSeriesId = timeSeriesId;
  }

  /**
   * Gets the the {@code timeSeriesId} property.
   * @return the property, not null
   */
  public final Property<UniqueIdentifier> timeSeriesId() {
    return metaBean().timeSeriesId().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the data point unique identifier.
   * @return the value of the property
   */
  public UniqueIdentifier getDataPointId() {
    return _dataPointId;
  }

  /**
   * Sets the data point unique identifier.
   * @param dataPointId  the new value of the property
   */
  public void setDataPointId(UniqueIdentifier dataPointId) {
    this._dataPointId = dataPointId;
  }

  /**
   * Gets the the {@code dataPointId} property.
   * @return the property, not null
   */
  public final Property<UniqueIdentifier> dataPointId() {
    return metaBean().dataPointId().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the date the value refers to.
   * @return the value of the property
   */
  public T getDate() {
    return _date;
  }

  /**
   * Sets the date the value refers to.
   * @param date  the new value of the property
   */
  public void setDate(T date) {
    this._date = date;
  }

  /**
   * Gets the the {@code date} property.
   * @return the property, not null
   */
  public final Property<T> date() {
    return metaBean().date().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the time-series value
   * @return the value of the property
   */
  public Double getValue() {
    return _value;
  }

  /**
   * Sets the time-series value
   * @param value  the new value of the property
   */
  public void setValue(Double value) {
    this._value = value;
  }

  /**
   * Gets the the {@code value} property.
   * @return the property, not null
   */
  public final Property<Double> value() {
    return metaBean().value().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code DataPointDocument}.
   */
  public static class Meta<T> extends BasicMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    @SuppressWarnings("rawtypes")
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code timeSeriesId} property.
     */
    private final MetaProperty<UniqueIdentifier> _timeSeriesId = DirectMetaProperty.ofReadWrite(this, "timeSeriesId", UniqueIdentifier.class);
    /**
     * The meta-property for the {@code dataPointId} property.
     */
    private final MetaProperty<UniqueIdentifier> _dataPointId = DirectMetaProperty.ofReadWrite(this, "dataPointId", UniqueIdentifier.class);
    /**
     * The meta-property for the {@code date} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<T> _date = (DirectMetaProperty) DirectMetaProperty.ofReadWrite(this, "date", Object.class);
    /**
     * The meta-property for the {@code value} property.
     */
    private final MetaProperty<Double> _value = DirectMetaProperty.ofReadWrite(this, "value", Double.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<Object>> _map;

    @SuppressWarnings({"unchecked", "rawtypes" })
    protected Meta() {
      LinkedHashMap temp = new LinkedHashMap();
      temp.put("timeSeriesId", _timeSeriesId);
      temp.put("dataPointId", _dataPointId);
      temp.put("date", _date);
      temp.put("value", _value);
      _map = Collections.unmodifiableMap(temp);
    }

    @Override
    public DataPointDocument<T> createBean() {
      return new DataPointDocument<T>();
    }

    @SuppressWarnings({"unchecked", "rawtypes" })
    @Override
    public Class<? extends DataPointDocument<T>> beanType() {
      return (Class) DataPointDocument.class;
    }

    @Override
    public Map<String, MetaProperty<Object>> metaPropertyMap() {
      return _map;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code timeSeriesId} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<UniqueIdentifier> timeSeriesId() {
      return _timeSeriesId;
    }

    /**
     * The meta-property for the {@code dataPointId} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<UniqueIdentifier> dataPointId() {
      return _dataPointId;
    }

    /**
     * The meta-property for the {@code date} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<T> date() {
      return _date;
    }

    /**
     * The meta-property for the {@code value} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> value() {
      return _value;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
