/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */

namespace com.opengamma.master.security {

  /**
   * A simple mutable implementation of {@code Security}.
   */
  message ManageableSecurity {
  
    optional com.opengamma.id.UniqueIdentifier uniqueId;
    required string name [default=""];
    required string securityType;
    required com.opengamma.id.IdentifierBundle identifiers [default=()];
    
    // TODO: getName - used to call buildDefaultDisplayName if no name was given

    binding Java {
      implements "com.opengamma.core.security.Security, com.opengamma.id.MutableUniqueIdentifiable";
      methods "equals,hashCode";
      body <<<JAVA
        /**
         * Dynamically determines a 'default' display name if one hasn't been explicitly set.
         * This implementation constructs one from the identity key or identifiers.
         * 
         * @return a default display name
         */
        protected String buildDefaultDisplayName() {
          final com.opengamma.id.UniqueIdentifier identifier = getUniqueId(); // assign for thread-safety
          if (identifier != null) {
            return identifier.toString();
          }
          final com.opengamma.id.IdentifierBundle bundle = getIdentifiers(); // assign for thread-safety
          final com.opengamma.id.Identifier first = (bundle.size() == 0 ? null : bundle.getIdentifiers().iterator().next());
          return org.apache.commons.lang.ObjectUtils.toString(first);
        }
        
        /**
         * Add an identifier to the bundle.
         */
        public void addIdentifier (final com.opengamma.id.Identifier identifier) {
          setIdentifiers (getIdentifiers ().withIdentifier (identifier));
        }
JAVA;
    }
  }

}
