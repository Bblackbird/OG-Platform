<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">

  <!--this stuff is different for different test cases-->
  <!--<context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:/com/opengamma/web/rest-subscription-test.xml</param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>-->

  <servlet>
    <servlet-name>rest</servlet-name>
    <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
    <!--TODO this shouldn't be necessary in a normal deployment - Jersey scans WEB-INF/lib and WEB-INF/classes-->
    <init-param>
      <param-name>javax.ws.rs.Application</param-name>
      <param-value>com.opengamma.web.server.push.test.TestApplication</param-value>
    </init-param>
    <!--I think this should work but causes Jersey to fail because it can't find an ASM class-->
    <!--<init-param>
      <param-name>com.sun.jersey.config.property.packages</param-name>
      <param-value>com.opengamma.web.server.push.test</param-value>
    </init-param>-->
    <init-param>
      <param-name>com.sun.jersey.spi.container.ResourceFilters</param-name>
      <param-value>com.opengamma.web.server.push.web.SubscribingFilterFactory</param-value>
    </init-param>
  </servlet>

  <servlet-mapping>
    <servlet-name>rest</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>handshake</servlet-name>
    <servlet-class>com.opengamma.web.server.push.web.HandshakeServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>handshake</servlet-name>
    <url-pattern>/handshake</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>updates</servlet-name>
    <servlet-class>com.opengamma.web.server.push.web.LongPollingServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>updates</servlet-name>
    <url-pattern>/updates/*</url-pattern>
  </servlet-mapping>

</web-app>
