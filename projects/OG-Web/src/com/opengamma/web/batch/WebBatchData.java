/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.web.batch;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

import javax.ws.rs.core.UriInfo;

import org.joda.beans.BeanDefinition;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.BasicMetaBean;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectMetaProperty;

import com.opengamma.financial.batch.BatchDocument;
import com.opengamma.financial.batch.BatchMaster;
import com.opengamma.id.UniqueIdentifier;

/**
 * Data class for web-based batch management.
 */
@BeanDefinition
public class WebBatchData extends DirectBean {

  /**
   * The batch manager.
   */
  @PropertyDefinition
  private BatchMaster _batchMaster;
  /**
   * The JSR-311 URI information.
   */
  @PropertyDefinition
  private UriInfo _uriInfo;
  /**
   * The batch id from the input URI.
   */
  @PropertyDefinition
  private String _uriBatchId;
  /**
   * The batch document.
   */
  @PropertyDefinition
  private BatchDocument _batch;

  /**
   * Creates an instance.
   */
  public WebBatchData() {
  }

  /**
   * Creates an instance.
   * @param uriInfo  the URI information
   */
  public WebBatchData(final UriInfo uriInfo) {
    setUriInfo(uriInfo);
  }

  //-------------------------------------------------------------------------
  /**
   * Gets the best available batch id.
   * 
   * @param overrideId  the override id, null derives the result from the data
   * @return the id, may be null
   */
  public String getBestBatchUriId(final UniqueIdentifier overrideId) {
    if (overrideId != null) {
      return overrideId.toLatest().toString();
    }
    return getBatch() != null ? getBatch().getUniqueId().toLatest().toString() : getUriBatchId();
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code WebBatchData}.
   * @return the meta-bean, not null
   */
  public static WebBatchData.Meta meta() {
    return WebBatchData.Meta.INSTANCE;
  }

  @Override
  public WebBatchData.Meta metaBean() {
    return WebBatchData.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName) {
    switch (propertyName.hashCode()) {
      case -252634564:  // batchMaster
        return getBatchMaster();
      case -173275078:  // uriInfo
        return getUriInfo();
      case -1764222231:  // uriBatchId
        return getUriBatchId();
      case 93509434:  // batch
        return getBatch();
    }
    return super.propertyGet(propertyName);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue) {
    switch (propertyName.hashCode()) {
      case -252634564:  // batchMaster
        setBatchMaster((BatchMaster) newValue);
        return;
      case -173275078:  // uriInfo
        setUriInfo((UriInfo) newValue);
        return;
      case -1764222231:  // uriBatchId
        setUriBatchId((String) newValue);
        return;
      case 93509434:  // batch
        setBatch((BatchDocument) newValue);
        return;
    }
    super.propertySet(propertyName, newValue);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the batch manager.
   * @return the value of the property
   */
  public BatchMaster getBatchMaster() {
    return _batchMaster;
  }

  /**
   * Sets the batch manager.
   * @param batchMaster  the new value of the property
   */
  public void setBatchMaster(BatchMaster batchMaster) {
    this._batchMaster = batchMaster;
  }

  /**
   * Gets the the {@code batchMaster} property.
   * @return the property, not null
   */
  public final Property<BatchMaster> batchMaster() {
    return metaBean().batchMaster().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the JSR-311 URI information.
   * @return the value of the property
   */
  public UriInfo getUriInfo() {
    return _uriInfo;
  }

  /**
   * Sets the JSR-311 URI information.
   * @param uriInfo  the new value of the property
   */
  public void setUriInfo(UriInfo uriInfo) {
    this._uriInfo = uriInfo;
  }

  /**
   * Gets the the {@code uriInfo} property.
   * @return the property, not null
   */
  public final Property<UriInfo> uriInfo() {
    return metaBean().uriInfo().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the batch id from the input URI.
   * @return the value of the property
   */
  public String getUriBatchId() {
    return _uriBatchId;
  }

  /**
   * Sets the batch id from the input URI.
   * @param uriBatchId  the new value of the property
   */
  public void setUriBatchId(String uriBatchId) {
    this._uriBatchId = uriBatchId;
  }

  /**
   * Gets the the {@code uriBatchId} property.
   * @return the property, not null
   */
  public final Property<String> uriBatchId() {
    return metaBean().uriBatchId().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the batch document.
   * @return the value of the property
   */
  public BatchDocument getBatch() {
    return _batch;
  }

  /**
   * Sets the batch document.
   * @param batch  the new value of the property
   */
  public void setBatch(BatchDocument batch) {
    this._batch = batch;
  }

  /**
   * Gets the the {@code batch} property.
   * @return the property, not null
   */
  public final Property<BatchDocument> batch() {
    return metaBean().batch().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code WebBatchData}.
   */
  public static class Meta extends BasicMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code batchMaster} property.
     */
    private final MetaProperty<BatchMaster> _batchMaster = DirectMetaProperty.ofReadWrite(this, "batchMaster", BatchMaster.class);
    /**
     * The meta-property for the {@code uriInfo} property.
     */
    private final MetaProperty<UriInfo> _uriInfo = DirectMetaProperty.ofReadWrite(this, "uriInfo", UriInfo.class);
    /**
     * The meta-property for the {@code uriBatchId} property.
     */
    private final MetaProperty<String> _uriBatchId = DirectMetaProperty.ofReadWrite(this, "uriBatchId", String.class);
    /**
     * The meta-property for the {@code batch} property.
     */
    private final MetaProperty<BatchDocument> _batch = DirectMetaProperty.ofReadWrite(this, "batch", BatchDocument.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<Object>> _map;

    @SuppressWarnings({"unchecked", "rawtypes" })
    protected Meta() {
      LinkedHashMap temp = new LinkedHashMap();
      temp.put("batchMaster", _batchMaster);
      temp.put("uriInfo", _uriInfo);
      temp.put("uriBatchId", _uriBatchId);
      temp.put("batch", _batch);
      _map = Collections.unmodifiableMap(temp);
    }

    @Override
    public WebBatchData createBean() {
      return new WebBatchData();
    }

    @Override
    public Class<? extends WebBatchData> beanType() {
      return WebBatchData.class;
    }

    @Override
    public Map<String, MetaProperty<Object>> metaPropertyMap() {
      return _map;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code batchMaster} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<BatchMaster> batchMaster() {
      return _batchMaster;
    }

    /**
     * The meta-property for the {@code uriInfo} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<UriInfo> uriInfo() {
      return _uriInfo;
    }

    /**
     * The meta-property for the {@code uriBatchId} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> uriBatchId() {
      return _uriBatchId;
    }

    /**
     * The meta-property for the {@code batch} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<BatchDocument> batch() {
      return _batch;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
