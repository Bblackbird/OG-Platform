/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.web.batch;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.ws.rs.core.UriInfo;

import org.joda.beans.BeanDefinition;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.BasicMetaBean;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectMetaProperty;

import com.opengamma.engine.view.ViewResultEntry;
import com.opengamma.financial.batch.BatchDbManager;
import com.opengamma.financial.batch.BatchError;
import com.opengamma.financial.batch.BatchSearchResultItem;

/**
 * 
 */
@BeanDefinition
public class WebBatchData extends DirectBean {
  
  /**
   * The batch DB manager.
   */
  @PropertyDefinition
  private BatchDbManager _batchDbManager;
  
  /**
   * The JSR-311 URI information.
   */
  @PropertyDefinition
  private UriInfo _uriInfo;
  
  /**
   * The batch
   */
  @PropertyDefinition
  private BatchSearchResultItem _batch;
  
  /**
   * Batch successes.
   */
  @PropertyDefinition
  private List<ViewResultEntry> _batchResults;
  
  /**
   * Batch errors.
   */
  @PropertyDefinition
  private List<BatchError> _batchErrors;
  

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code WebBatchData}.
   * @return the meta-bean, not null
   */
  public static WebBatchData.Meta meta() {
    return WebBatchData.Meta.INSTANCE;
  }

  @Override
  public WebBatchData.Meta metaBean() {
    return WebBatchData.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName) {
    switch (propertyName.hashCode()) {
      case -525010123:  // batchDbManager
        return getBatchDbManager();
      case -173275078:  // uriInfo
        return getUriInfo();
      case 93509434:  // batch
        return getBatch();
      case 1015367516:  // batchResults
        return getBatchResults();
      case -466002107:  // batchErrors
        return getBatchErrors();
    }
    return super.propertyGet(propertyName);
  }

  @SuppressWarnings("unchecked")
  @Override
  protected void propertySet(String propertyName, Object newValue) {
    switch (propertyName.hashCode()) {
      case -525010123:  // batchDbManager
        setBatchDbManager((BatchDbManager) newValue);
        return;
      case -173275078:  // uriInfo
        setUriInfo((UriInfo) newValue);
        return;
      case 93509434:  // batch
        setBatch((BatchSearchResultItem) newValue);
        return;
      case 1015367516:  // batchResults
        setBatchResults((List<ViewResultEntry>) newValue);
        return;
      case -466002107:  // batchErrors
        setBatchErrors((List<BatchError>) newValue);
        return;
    }
    super.propertySet(propertyName, newValue);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the batch DB manager.
   * @return the value of the property
   */
  public BatchDbManager getBatchDbManager() {
    return _batchDbManager;
  }

  /**
   * Sets the batch DB manager.
   * @param batchDbManager  the new value of the property
   */
  public void setBatchDbManager(BatchDbManager batchDbManager) {
    this._batchDbManager = batchDbManager;
  }

  /**
   * Gets the the {@code batchDbManager} property.
   * @return the property, not null
   */
  public final Property<BatchDbManager> batchDbManager() {
    return metaBean().batchDbManager().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the JSR-311 URI information.
   * @return the value of the property
   */
  public UriInfo getUriInfo() {
    return _uriInfo;
  }

  /**
   * Sets the JSR-311 URI information.
   * @param uriInfo  the new value of the property
   */
  public void setUriInfo(UriInfo uriInfo) {
    this._uriInfo = uriInfo;
  }

  /**
   * Gets the the {@code uriInfo} property.
   * @return the property, not null
   */
  public final Property<UriInfo> uriInfo() {
    return metaBean().uriInfo().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the batch
   * @return the value of the property
   */
  public BatchSearchResultItem getBatch() {
    return _batch;
  }

  /**
   * Sets the batch
   * @param batch  the new value of the property
   */
  public void setBatch(BatchSearchResultItem batch) {
    this._batch = batch;
  }

  /**
   * Gets the the {@code batch} property.
   * @return the property, not null
   */
  public final Property<BatchSearchResultItem> batch() {
    return metaBean().batch().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets batch successes.
   * @return the value of the property
   */
  public List<ViewResultEntry> getBatchResults() {
    return _batchResults;
  }

  /**
   * Sets batch successes.
   * @param batchResults  the new value of the property
   */
  public void setBatchResults(List<ViewResultEntry> batchResults) {
    this._batchResults = batchResults;
  }

  /**
   * Gets the the {@code batchResults} property.
   * @return the property, not null
   */
  public final Property<List<ViewResultEntry>> batchResults() {
    return metaBean().batchResults().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets batch errors.
   * @return the value of the property
   */
  public List<BatchError> getBatchErrors() {
    return _batchErrors;
  }

  /**
   * Sets batch errors.
   * @param batchErrors  the new value of the property
   */
  public void setBatchErrors(List<BatchError> batchErrors) {
    this._batchErrors = batchErrors;
  }

  /**
   * Gets the the {@code batchErrors} property.
   * @return the property, not null
   */
  public final Property<List<BatchError>> batchErrors() {
    return metaBean().batchErrors().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code WebBatchData}.
   */
  public static class Meta extends BasicMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code batchDbManager} property.
     */
    private final MetaProperty<BatchDbManager> _batchDbManager = DirectMetaProperty.ofReadWrite(this, "batchDbManager", BatchDbManager.class);
    /**
     * The meta-property for the {@code uriInfo} property.
     */
    private final MetaProperty<UriInfo> _uriInfo = DirectMetaProperty.ofReadWrite(this, "uriInfo", UriInfo.class);
    /**
     * The meta-property for the {@code batch} property.
     */
    private final MetaProperty<BatchSearchResultItem> _batch = DirectMetaProperty.ofReadWrite(this, "batch", BatchSearchResultItem.class);
    /**
     * The meta-property for the {@code batchResults} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<List<ViewResultEntry>> _batchResults = DirectMetaProperty.ofReadWrite(this, "batchResults", (Class) List.class);
    /**
     * The meta-property for the {@code batchErrors} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<List<BatchError>> _batchErrors = DirectMetaProperty.ofReadWrite(this, "batchErrors", (Class) List.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<Object>> _map;

    @SuppressWarnings({"unchecked", "rawtypes" })
    protected Meta() {
      LinkedHashMap temp = new LinkedHashMap();
      temp.put("batchDbManager", _batchDbManager);
      temp.put("uriInfo", _uriInfo);
      temp.put("batch", _batch);
      temp.put("batchResults", _batchResults);
      temp.put("batchErrors", _batchErrors);
      _map = Collections.unmodifiableMap(temp);
    }

    @Override
    public WebBatchData createBean() {
      return new WebBatchData();
    }

    @Override
    public Class<? extends WebBatchData> beanType() {
      return WebBatchData.class;
    }

    @Override
    public Map<String, MetaProperty<Object>> metaPropertyMap() {
      return _map;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code batchDbManager} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<BatchDbManager> batchDbManager() {
      return _batchDbManager;
    }

    /**
     * The meta-property for the {@code uriInfo} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<UriInfo> uriInfo() {
      return _uriInfo;
    }

    /**
     * The meta-property for the {@code batch} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<BatchSearchResultItem> batch() {
      return _batch;
    }

    /**
     * The meta-property for the {@code batchResults} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<List<ViewResultEntry>> batchResults() {
      return _batchResults;
    }

    /**
     * The meta-property for the {@code batchErrors} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<List<BatchError>> batchErrors() {
      return _batchErrors;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
