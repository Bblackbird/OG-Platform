/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.web.historicaldata;

import java.util.Map;

import javax.ws.rs.core.UriInfo;

import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.opengamma.id.UniqueIdentifier;
import com.opengamma.master.historicaldata.HistoricalDataDocument;
import com.opengamma.master.historicaldata.HistoricalDataLoader;
import com.opengamma.master.historicaldata.HistoricalDataMaster;

/**
 * Data class for web-based historical data.
 */
@BeanDefinition
public class WebHistoricalDataData extends DirectBean {

  /**
   * The historical data master.
   */
  @PropertyDefinition
  private HistoricalDataMaster _timeSeriesMaster;
  /**
   * The historical data loader.
   */
  @PropertyDefinition
  private HistoricalDataLoader _timeSeriesLoader;
  /**
   * The JSR-311 URI information.
   */
  @PropertyDefinition
  private UriInfo _uriInfo;
  /**
   * The historical data id from the input URI.
   */
  @PropertyDefinition
  private String _uriTimeSeriesId;
  /**
   * The loaded historical data.
   */
  @PropertyDefinition
  private HistoricalDataDocument _timeSeries;
  
  /**
   * Gets the best available security id.
   * @param overrideId  the override id, null derives the result from the data
   * @return the id, may be null
   */
  public String getBestTimeSeriesUriId(final UniqueIdentifier overrideId) {
    if (overrideId != null) {
      return overrideId.toLatest().toString();
    }
    return getTimeSeries() != null ? getTimeSeries().getUniqueId().toLatest().toString() : getUriTimeSeriesId();
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code WebTimeSeriesData}.
   * @return the meta-bean, not null
   */
  public static WebHistoricalDataData.Meta meta() {
    return WebHistoricalDataData.Meta.INSTANCE;
  }

  @Override
  public WebHistoricalDataData.Meta metaBean() {
    return WebHistoricalDataData.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName) {
    switch (propertyName.hashCode()) {
      case 1946549030:  // timeSeriesMaster
        return getTimeSeriesMaster();
      case 1930297559:  // timeSeriesLoader
        return getTimeSeriesLoader();
      case -173275078:  // uriInfo
        return getUriInfo();
      case -377735317:  // uriTimeSeriesId
        return getUriTimeSeriesId();
      case 779431844:  // timeSeries
        return getTimeSeries();
    }
    return super.propertyGet(propertyName);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue) {
    switch (propertyName.hashCode()) {
      case 1946549030:  // timeSeriesMaster
        setTimeSeriesMaster((HistoricalDataMaster) newValue);
        return;
      case 1930297559:  // timeSeriesLoader
        setTimeSeriesLoader((HistoricalDataLoader) newValue);
        return;
      case -173275078:  // uriInfo
        setUriInfo((UriInfo) newValue);
        return;
      case -377735317:  // uriTimeSeriesId
        setUriTimeSeriesId((String) newValue);
        return;
      case 779431844:  // timeSeries
        setTimeSeries((HistoricalDataDocument) newValue);
        return;
    }
    super.propertySet(propertyName, newValue);
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      WebHistoricalDataData other = (WebHistoricalDataData) obj;
      return JodaBeanUtils.equal(getTimeSeriesMaster(), other.getTimeSeriesMaster()) &&
          JodaBeanUtils.equal(getTimeSeriesLoader(), other.getTimeSeriesLoader()) &&
          JodaBeanUtils.equal(getUriInfo(), other.getUriInfo()) &&
          JodaBeanUtils.equal(getUriTimeSeriesId(), other.getUriTimeSeriesId()) &&
          JodaBeanUtils.equal(getTimeSeries(), other.getTimeSeries());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    hash += hash * 31 + JodaBeanUtils.hashCode(getTimeSeriesMaster());
    hash += hash * 31 + JodaBeanUtils.hashCode(getTimeSeriesLoader());
    hash += hash * 31 + JodaBeanUtils.hashCode(getUriInfo());
    hash += hash * 31 + JodaBeanUtils.hashCode(getUriTimeSeriesId());
    hash += hash * 31 + JodaBeanUtils.hashCode(getTimeSeries());
    return hash;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the historical data master.
   * @return the value of the property
   */
  public HistoricalDataMaster getTimeSeriesMaster() {
    return _timeSeriesMaster;
  }

  /**
   * Sets the time series master.
   * @param timeSeriesMaster  the new value of the property
   */
  public void setTimeSeriesMaster(HistoricalDataMaster timeSeriesMaster) {
    this._timeSeriesMaster = timeSeriesMaster;
  }

  /**
   * Gets the the {@code timeSeriesMaster} property.
   * @return the property, not null
   */
  public final Property<HistoricalDataMaster> timeSeriesMaster() {
    return metaBean().timeSeriesMaster().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the time series loader.
   * @return the value of the property
   */
  public HistoricalDataLoader getTimeSeriesLoader() {
    return _timeSeriesLoader;
  }

  /**
   * Sets the time series loader.
   * @param timeSeriesLoader  the new value of the property
   */
  public void setTimeSeriesLoader(HistoricalDataLoader timeSeriesLoader) {
    this._timeSeriesLoader = timeSeriesLoader;
  }

  /**
   * Gets the the {@code timeSeriesLoader} property.
   * @return the property, not null
   */
  public final Property<HistoricalDataLoader> timeSeriesLoader() {
    return metaBean().timeSeriesLoader().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the JSR-311 URI information.
   * @return the value of the property
   */
  public UriInfo getUriInfo() {
    return _uriInfo;
  }

  /**
   * Sets the JSR-311 URI information.
   * @param uriInfo  the new value of the property
   */
  public void setUriInfo(UriInfo uriInfo) {
    this._uriInfo = uriInfo;
  }

  /**
   * Gets the the {@code uriInfo} property.
   * @return the property, not null
   */
  public final Property<UriInfo> uriInfo() {
    return metaBean().uriInfo().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the time series id from the input URI.
   * @return the value of the property
   */
  public String getUriTimeSeriesId() {
    return _uriTimeSeriesId;
  }

  /**
   * Sets the time series id from the input URI.
   * @param uriTimeSeriesId  the new value of the property
   */
  public void setUriTimeSeriesId(String uriTimeSeriesId) {
    this._uriTimeSeriesId = uriTimeSeriesId;
  }

  /**
   * Gets the the {@code uriTimeSeriesId} property.
   * @return the property, not null
   */
  public final Property<String> uriTimeSeriesId() {
    return metaBean().uriTimeSeriesId().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the loaded time series.
   * @return the value of the property
   */
  public HistoricalDataDocument getTimeSeries() {
    return _timeSeries;
  }

  /**
   * Sets the loaded time series.
   * @param timeSeries  the new value of the property
   */
  public void setTimeSeries(HistoricalDataDocument timeSeries) {
    this._timeSeries = timeSeries;
  }

  /**
   * Gets the the {@code timeSeries} property.
   * @return the property, not null
   */
  public final Property<HistoricalDataDocument> timeSeries() {
    return metaBean().timeSeries().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code WebTimeSeriesData}.
   */
  public static class Meta extends DirectMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code timeSeriesMaster} property.
     */
    private final MetaProperty<HistoricalDataMaster> _timeSeriesMaster = DirectMetaProperty.ofReadWrite(
        this, "timeSeriesMaster", WebHistoricalDataData.class, HistoricalDataMaster.class);
    /**
     * The meta-property for the {@code timeSeriesLoader} property.
     */
    private final MetaProperty<HistoricalDataLoader> _timeSeriesLoader = DirectMetaProperty.ofReadWrite(
        this, "timeSeriesLoader", WebHistoricalDataData.class, HistoricalDataLoader.class);
    /**
     * The meta-property for the {@code uriInfo} property.
     */
    private final MetaProperty<UriInfo> _uriInfo = DirectMetaProperty.ofReadWrite(
        this, "uriInfo", WebHistoricalDataData.class, UriInfo.class);
    /**
     * The meta-property for the {@code uriTimeSeriesId} property.
     */
    private final MetaProperty<String> _uriTimeSeriesId = DirectMetaProperty.ofReadWrite(
        this, "uriTimeSeriesId", WebHistoricalDataData.class, String.class);
    /**
     * The meta-property for the {@code timeSeries} property.
     */
    private final MetaProperty<HistoricalDataDocument> _timeSeries = DirectMetaProperty.ofReadWrite(
        this, "timeSeries", WebHistoricalDataData.class, HistoricalDataDocument.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<Object>> _map = new DirectMetaPropertyMap(
        this, null,
        "timeSeriesMaster",
        "timeSeriesLoader",
        "uriInfo",
        "uriTimeSeriesId",
        "timeSeries");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 1946549030:  // timeSeriesMaster
          return _timeSeriesMaster;
        case 1930297559:  // timeSeriesLoader
          return _timeSeriesLoader;
        case -173275078:  // uriInfo
          return _uriInfo;
        case -377735317:  // uriTimeSeriesId
          return _uriTimeSeriesId;
        case 779431844:  // timeSeries
          return _timeSeries;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends WebHistoricalDataData> builder() {
      return new DirectBeanBuilder<WebHistoricalDataData>(new WebHistoricalDataData());
    }

    @Override
    public Class<? extends WebHistoricalDataData> beanType() {
      return WebHistoricalDataData.class;
    }

    @Override
    public Map<String, MetaProperty<Object>> metaPropertyMap() {
      return _map;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code timeSeriesMaster} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<HistoricalDataMaster> timeSeriesMaster() {
      return _timeSeriesMaster;
    }

    /**
     * The meta-property for the {@code timeSeriesLoader} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<HistoricalDataLoader> timeSeriesLoader() {
      return _timeSeriesLoader;
    }

    /**
     * The meta-property for the {@code uriInfo} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<UriInfo> uriInfo() {
      return _uriInfo;
    }

    /**
     * The meta-property for the {@code uriTimeSeriesId} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> uriTimeSeriesId() {
      return _uriTimeSeriesId;
    }

    /**
     * The meta-property for the {@code timeSeries} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<HistoricalDataDocument> timeSeries() {
      return _timeSeries;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
