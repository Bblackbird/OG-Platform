/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.financial.security.capfloor;

import java.util.Map;

import javax.time.calendar.ZonedDateTime;

import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.opengamma.financial.convention.daycount.DayCount;
import com.opengamma.financial.convention.frequency.Frequency;
import com.opengamma.financial.security.FinancialSecurity;
import com.opengamma.financial.security.FinancialSecurityVisitor;
import com.opengamma.id.ExternalId;
import com.opengamma.util.money.Currency;

/**
 * A security for cap/floor.
 */
@BeanDefinition
public class CapFloorSecurity extends FinancialSecurity {

  /** Serialization version. */
  private static final long serialVersionUID = 1L;

  /**
   * The security type.
   */
  public static final String SECURITY_TYPE = "CAP/FLOOR";

  /**
   * The start date.
   */
  @PropertyDefinition(validate = "notNull")
  private ZonedDateTime _startDate;
  /**
   * The maturity date.
   */
  @PropertyDefinition(validate = "notNull")
  private ZonedDateTime _maturityDate;
  /**
   * The notional.
   */
  @PropertyDefinition
  private double _notional;
  /**
   * The underlying identifier.
   */
  @PropertyDefinition(validate = "notNull")
  private ExternalId _underlyingIdentifier;
  /**
   * The strike.
   */
  @PropertyDefinition
  private double _strike;
  /**
   * The frequency.
   */
  @PropertyDefinition(validate = "notNull")
  private Frequency _frequency;
  /**
   * The currency.
   */
  @PropertyDefinition(validate = "notNull")
  private Currency _currency;
  /**
   * The day count.
   */
  @PropertyDefinition(validate = "notNull")
  private DayCount _dayCount;
  /**
   * The payer flag.
   */
  @PropertyDefinition(get = "get")
  private boolean _isPayer;
  /**
   * The cap flag.
   */
  @PropertyDefinition(get = "get")
  private boolean _isCap;
  /**
   * The IBOR flag.
   */
  @PropertyDefinition(get = "get")
  private boolean _isIbor;

  /**
   * Creates an empty instance.
   * <p>
   * The security details should be set before use.
   */
  public CapFloorSecurity() {
  }

  public CapFloorSecurity(ZonedDateTime startDate, ZonedDateTime maturityDate, double notional, ExternalId underlyingIdentifier, double strike,
      Frequency frequency, Currency currency, DayCount dayCount, boolean isPayer, boolean isCap, boolean isIbor) {
    super(SECURITY_TYPE);
    setStartDate(startDate);
    setMaturityDate(maturityDate);
    setNotional(notional);
    setUnderlyingIdentifier(underlyingIdentifier);
    setStrike(strike);
    setFrequency(frequency);
    setCurrency(currency);
    setDayCount(dayCount);
    setIsPayer(isPayer);
    setIsCap(isCap);
    setIsIbor(isIbor);
  }

  //-------------------------------------------------------------------------
  @Override
  public final <T> T accept(FinancialSecurityVisitor<T> visitor) {
    return visitor.visitCapFloorSecurity(this);
  }

  /**
   * Accepts a visitor to manage traversal of the hierarchy.
   * 
   * @param <T> the result type of the visitor
   * @param visitor  the visitor, not null
   * @return the result
   */
  public <T> T accept(CapFloorSecurityVisitor<T> visitor) {
    return visitor.visitCapFloorSecurity(this);
  };

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code CapFloorSecurity}.
   * @return the meta-bean, not null
   */
  public static CapFloorSecurity.Meta meta() {
    return CapFloorSecurity.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(CapFloorSecurity.Meta.INSTANCE);
  }

  @Override
  public CapFloorSecurity.Meta metaBean() {
    return CapFloorSecurity.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case -2129778896:  // startDate
        return getStartDate();
      case -414641441:  // maturityDate
        return getMaturityDate();
      case 1585636160:  // notional
        return getNotional();
      case 368639974:  // underlyingIdentifier
        return getUnderlyingIdentifier();
      case -891985998:  // strike
        return getStrike();
      case -70023844:  // frequency
        return getFrequency();
      case 575402001:  // currency
        return getCurrency();
      case 1905311443:  // dayCount
        return getDayCount();
      case 2067849291:  // isPayer
        return getIsPayer();
      case 100463176:  // isCap
        return getIsCap();
      case -1180429050:  // isIbor
        return getIsIbor();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case -2129778896:  // startDate
        setStartDate((ZonedDateTime) newValue);
        return;
      case -414641441:  // maturityDate
        setMaturityDate((ZonedDateTime) newValue);
        return;
      case 1585636160:  // notional
        setNotional((Double) newValue);
        return;
      case 368639974:  // underlyingIdentifier
        setUnderlyingIdentifier((ExternalId) newValue);
        return;
      case -891985998:  // strike
        setStrike((Double) newValue);
        return;
      case -70023844:  // frequency
        setFrequency((Frequency) newValue);
        return;
      case 575402001:  // currency
        setCurrency((Currency) newValue);
        return;
      case 1905311443:  // dayCount
        setDayCount((DayCount) newValue);
        return;
      case 2067849291:  // isPayer
        setIsPayer((Boolean) newValue);
        return;
      case 100463176:  // isCap
        setIsCap((Boolean) newValue);
        return;
      case -1180429050:  // isIbor
        setIsIbor((Boolean) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_startDate, "startDate");
    JodaBeanUtils.notNull(_maturityDate, "maturityDate");
    JodaBeanUtils.notNull(_underlyingIdentifier, "underlyingIdentifier");
    JodaBeanUtils.notNull(_frequency, "frequency");
    JodaBeanUtils.notNull(_currency, "currency");
    JodaBeanUtils.notNull(_dayCount, "dayCount");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      CapFloorSecurity other = (CapFloorSecurity) obj;
      return JodaBeanUtils.equal(getStartDate(), other.getStartDate()) &&
          JodaBeanUtils.equal(getMaturityDate(), other.getMaturityDate()) &&
          JodaBeanUtils.equal(getNotional(), other.getNotional()) &&
          JodaBeanUtils.equal(getUnderlyingIdentifier(), other.getUnderlyingIdentifier()) &&
          JodaBeanUtils.equal(getStrike(), other.getStrike()) &&
          JodaBeanUtils.equal(getFrequency(), other.getFrequency()) &&
          JodaBeanUtils.equal(getCurrency(), other.getCurrency()) &&
          JodaBeanUtils.equal(getDayCount(), other.getDayCount()) &&
          JodaBeanUtils.equal(getIsPayer(), other.getIsPayer()) &&
          JodaBeanUtils.equal(getIsCap(), other.getIsCap()) &&
          JodaBeanUtils.equal(getIsIbor(), other.getIsIbor()) &&
          super.equals(obj);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = 7;
    hash += hash * 31 + JodaBeanUtils.hashCode(getStartDate());
    hash += hash * 31 + JodaBeanUtils.hashCode(getMaturityDate());
    hash += hash * 31 + JodaBeanUtils.hashCode(getNotional());
    hash += hash * 31 + JodaBeanUtils.hashCode(getUnderlyingIdentifier());
    hash += hash * 31 + JodaBeanUtils.hashCode(getStrike());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFrequency());
    hash += hash * 31 + JodaBeanUtils.hashCode(getCurrency());
    hash += hash * 31 + JodaBeanUtils.hashCode(getDayCount());
    hash += hash * 31 + JodaBeanUtils.hashCode(getIsPayer());
    hash += hash * 31 + JodaBeanUtils.hashCode(getIsCap());
    hash += hash * 31 + JodaBeanUtils.hashCode(getIsIbor());
    return hash ^ super.hashCode();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the start date.
   * @return the value of the property, not null
   */
  public ZonedDateTime getStartDate() {
    return _startDate;
  }

  /**
   * Sets the start date.
   * @param startDate  the new value of the property, not null
   */
  public void setStartDate(ZonedDateTime startDate) {
    JodaBeanUtils.notNull(startDate, "startDate");
    this._startDate = startDate;
  }

  /**
   * Gets the the {@code startDate} property.
   * @return the property, not null
   */
  public final Property<ZonedDateTime> startDate() {
    return metaBean().startDate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the maturity date.
   * @return the value of the property, not null
   */
  public ZonedDateTime getMaturityDate() {
    return _maturityDate;
  }

  /**
   * Sets the maturity date.
   * @param maturityDate  the new value of the property, not null
   */
  public void setMaturityDate(ZonedDateTime maturityDate) {
    JodaBeanUtils.notNull(maturityDate, "maturityDate");
    this._maturityDate = maturityDate;
  }

  /**
   * Gets the the {@code maturityDate} property.
   * @return the property, not null
   */
  public final Property<ZonedDateTime> maturityDate() {
    return metaBean().maturityDate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the notional.
   * @return the value of the property
   */
  public double getNotional() {
    return _notional;
  }

  /**
   * Sets the notional.
   * @param notional  the new value of the property
   */
  public void setNotional(double notional) {
    this._notional = notional;
  }

  /**
   * Gets the the {@code notional} property.
   * @return the property, not null
   */
  public final Property<Double> notional() {
    return metaBean().notional().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the underlying identifier.
   * @return the value of the property, not null
   */
  public ExternalId getUnderlyingIdentifier() {
    return _underlyingIdentifier;
  }

  /**
   * Sets the underlying identifier.
   * @param underlyingIdentifier  the new value of the property, not null
   */
  public void setUnderlyingIdentifier(ExternalId underlyingIdentifier) {
    JodaBeanUtils.notNull(underlyingIdentifier, "underlyingIdentifier");
    this._underlyingIdentifier = underlyingIdentifier;
  }

  /**
   * Gets the the {@code underlyingIdentifier} property.
   * @return the property, not null
   */
  public final Property<ExternalId> underlyingIdentifier() {
    return metaBean().underlyingIdentifier().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the strike.
   * @return the value of the property
   */
  public double getStrike() {
    return _strike;
  }

  /**
   * Sets the strike.
   * @param strike  the new value of the property
   */
  public void setStrike(double strike) {
    this._strike = strike;
  }

  /**
   * Gets the the {@code strike} property.
   * @return the property, not null
   */
  public final Property<Double> strike() {
    return metaBean().strike().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the frequency.
   * @return the value of the property, not null
   */
  public Frequency getFrequency() {
    return _frequency;
  }

  /**
   * Sets the frequency.
   * @param frequency  the new value of the property, not null
   */
  public void setFrequency(Frequency frequency) {
    JodaBeanUtils.notNull(frequency, "frequency");
    this._frequency = frequency;
  }

  /**
   * Gets the the {@code frequency} property.
   * @return the property, not null
   */
  public final Property<Frequency> frequency() {
    return metaBean().frequency().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the currency.
   * @return the value of the property, not null
   */
  public Currency getCurrency() {
    return _currency;
  }

  /**
   * Sets the currency.
   * @param currency  the new value of the property, not null
   */
  public void setCurrency(Currency currency) {
    JodaBeanUtils.notNull(currency, "currency");
    this._currency = currency;
  }

  /**
   * Gets the the {@code currency} property.
   * @return the property, not null
   */
  public final Property<Currency> currency() {
    return metaBean().currency().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the day count.
   * @return the value of the property, not null
   */
  public DayCount getDayCount() {
    return _dayCount;
  }

  /**
   * Sets the day count.
   * @param dayCount  the new value of the property, not null
   */
  public void setDayCount(DayCount dayCount) {
    JodaBeanUtils.notNull(dayCount, "dayCount");
    this._dayCount = dayCount;
  }

  /**
   * Gets the the {@code dayCount} property.
   * @return the property, not null
   */
  public final Property<DayCount> dayCount() {
    return metaBean().dayCount().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the payer flag.
   * @return the value of the property
   */
  public boolean getIsPayer() {
    return _isPayer;
  }

  /**
   * Sets the payer flag.
   * @param isPayer  the new value of the property
   */
  public void setIsPayer(boolean isPayer) {
    this._isPayer = isPayer;
  }

  /**
   * Gets the the {@code isPayer} property.
   * @return the property, not null
   */
  public final Property<Boolean> isPayer() {
    return metaBean().isPayer().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the cap flag.
   * @return the value of the property
   */
  public boolean getIsCap() {
    return _isCap;
  }

  /**
   * Sets the cap flag.
   * @param isCap  the new value of the property
   */
  public void setIsCap(boolean isCap) {
    this._isCap = isCap;
  }

  /**
   * Gets the the {@code isCap} property.
   * @return the property, not null
   */
  public final Property<Boolean> isCap() {
    return metaBean().isCap().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the IBOR flag.
   * @return the value of the property
   */
  public boolean getIsIbor() {
    return _isIbor;
  }

  /**
   * Sets the IBOR flag.
   * @param isIbor  the new value of the property
   */
  public void setIsIbor(boolean isIbor) {
    this._isIbor = isIbor;
  }

  /**
   * Gets the the {@code isIbor} property.
   * @return the property, not null
   */
  public final Property<Boolean> isIbor() {
    return metaBean().isIbor().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code CapFloorSecurity}.
   */
  public static class Meta extends FinancialSecurity.Meta {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code startDate} property.
     */
    private final MetaProperty<ZonedDateTime> _startDate = DirectMetaProperty.ofReadWrite(
        this, "startDate", CapFloorSecurity.class, ZonedDateTime.class);
    /**
     * The meta-property for the {@code maturityDate} property.
     */
    private final MetaProperty<ZonedDateTime> _maturityDate = DirectMetaProperty.ofReadWrite(
        this, "maturityDate", CapFloorSecurity.class, ZonedDateTime.class);
    /**
     * The meta-property for the {@code notional} property.
     */
    private final MetaProperty<Double> _notional = DirectMetaProperty.ofReadWrite(
        this, "notional", CapFloorSecurity.class, Double.TYPE);
    /**
     * The meta-property for the {@code underlyingIdentifier} property.
     */
    private final MetaProperty<ExternalId> _underlyingIdentifier = DirectMetaProperty.ofReadWrite(
        this, "underlyingIdentifier", CapFloorSecurity.class, ExternalId.class);
    /**
     * The meta-property for the {@code strike} property.
     */
    private final MetaProperty<Double> _strike = DirectMetaProperty.ofReadWrite(
        this, "strike", CapFloorSecurity.class, Double.TYPE);
    /**
     * The meta-property for the {@code frequency} property.
     */
    private final MetaProperty<Frequency> _frequency = DirectMetaProperty.ofReadWrite(
        this, "frequency", CapFloorSecurity.class, Frequency.class);
    /**
     * The meta-property for the {@code currency} property.
     */
    private final MetaProperty<Currency> _currency = DirectMetaProperty.ofReadWrite(
        this, "currency", CapFloorSecurity.class, Currency.class);
    /**
     * The meta-property for the {@code dayCount} property.
     */
    private final MetaProperty<DayCount> _dayCount = DirectMetaProperty.ofReadWrite(
        this, "dayCount", CapFloorSecurity.class, DayCount.class);
    /**
     * The meta-property for the {@code isPayer} property.
     */
    private final MetaProperty<Boolean> _isPayer = DirectMetaProperty.ofReadWrite(
        this, "isPayer", CapFloorSecurity.class, Boolean.TYPE);
    /**
     * The meta-property for the {@code isCap} property.
     */
    private final MetaProperty<Boolean> _isCap = DirectMetaProperty.ofReadWrite(
        this, "isCap", CapFloorSecurity.class, Boolean.TYPE);
    /**
     * The meta-property for the {@code isIbor} property.
     */
    private final MetaProperty<Boolean> _isIbor = DirectMetaProperty.ofReadWrite(
        this, "isIbor", CapFloorSecurity.class, Boolean.TYPE);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<Object>> _map = new DirectMetaPropertyMap(
      this, (DirectMetaPropertyMap) super.metaPropertyMap(),
        "startDate",
        "maturityDate",
        "notional",
        "underlyingIdentifier",
        "strike",
        "frequency",
        "currency",
        "dayCount",
        "isPayer",
        "isCap",
        "isIbor");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case -2129778896:  // startDate
          return _startDate;
        case -414641441:  // maturityDate
          return _maturityDate;
        case 1585636160:  // notional
          return _notional;
        case 368639974:  // underlyingIdentifier
          return _underlyingIdentifier;
        case -891985998:  // strike
          return _strike;
        case -70023844:  // frequency
          return _frequency;
        case 575402001:  // currency
          return _currency;
        case 1905311443:  // dayCount
          return _dayCount;
        case 2067849291:  // isPayer
          return _isPayer;
        case 100463176:  // isCap
          return _isCap;
        case -1180429050:  // isIbor
          return _isIbor;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends CapFloorSecurity> builder() {
      return new DirectBeanBuilder<CapFloorSecurity>(new CapFloorSecurity());
    }

    @Override
    public Class<? extends CapFloorSecurity> beanType() {
      return CapFloorSecurity.class;
    }

    @Override
    public Map<String, MetaProperty<Object>> metaPropertyMap() {
      return _map;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code startDate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ZonedDateTime> startDate() {
      return _startDate;
    }

    /**
     * The meta-property for the {@code maturityDate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ZonedDateTime> maturityDate() {
      return _maturityDate;
    }

    /**
     * The meta-property for the {@code notional} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> notional() {
      return _notional;
    }

    /**
     * The meta-property for the {@code underlyingIdentifier} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ExternalId> underlyingIdentifier() {
      return _underlyingIdentifier;
    }

    /**
     * The meta-property for the {@code strike} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> strike() {
      return _strike;
    }

    /**
     * The meta-property for the {@code frequency} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Frequency> frequency() {
      return _frequency;
    }

    /**
     * The meta-property for the {@code currency} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Currency> currency() {
      return _currency;
    }

    /**
     * The meta-property for the {@code dayCount} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<DayCount> dayCount() {
      return _dayCount;
    }

    /**
     * The meta-property for the {@code isPayer} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Boolean> isPayer() {
      return _isPayer;
    }

    /**
     * The meta-property for the {@code isCap} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Boolean> isCap() {
      return _isCap;
    }

    /**
     * The meta-property for the {@code isIbor} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Boolean> isIbor() {
      return _isIbor;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
