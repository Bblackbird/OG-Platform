/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 * 
 * Please see distribution for license.
 */
package com.opengamma.financial.security.cds;

import javax.time.calendar.ZonedDateTime;

import org.joda.beans.BeanDefinition;
import org.joda.beans.PropertyDefinition;

import com.opengamma.financial.convention.frequency.Frequency;
import com.opengamma.financial.security.FinancialSecurity;
import com.opengamma.financial.security.FinancialSecurityVisitor;
import com.opengamma.id.ExternalId;
import com.opengamma.util.money.Currency;
import java.util.Map;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

/**
 * CDS security class
 * @author Martin Traverse
 */
@BeanDefinition
public class CDSSecurity extends FinancialSecurity {
  
  /** Serialization version */
  private static final long serialVersionUID = 1L;
  
  /** Security type for CDS securities */
  public static final String SECURITY_TYPE = "CDS";
  
  /** Notional */
  @PropertyDefinition
  private double _notional;
  
  /** Recovery rate against underlying asset in a default event */
  @PropertyDefinition
  private double _recoveryRate;
  
  /** Premium rate */
  @PropertyDefinition
  private double _premiumRate;
  
  /** Currency of the CDS */
  @PropertyDefinition(validate = "notNull")
  private Currency _currency;
  
  /** Maturity date */
  @PropertyDefinition(validate = "notNull")
  private ZonedDateTime _maturity;
  
  /** First premium payment date */
  @PropertyDefinition(validate = "notNull")
  private ZonedDateTime _firstPremiumDate;
  
  /** Premium payment frequency */
  @PropertyDefinition(validate = "notNull")
  private Frequency _premiumFrequency;
  
  /** Underlying bond */
  // TODO: Where to validate underlying is actually a bond?
  @PropertyDefinition(validate = "notNull")
  private ExternalId _underlying;
  
  CDSSecurity() {
    // For Fudge builder
  }
  
  public CDSSecurity(double notional, double recoveryRate, double premiumRate,
    Currency currency, ZonedDateTime maturity, ZonedDateTime firstPremiumDate,
    Frequency premiumFrequency, ExternalId underlying) {
    
    super(SECURITY_TYPE);
    setNotional(notional);
    setRecoveryRate(recoveryRate);
    setPremiumRate(premiumRate);
    setCurrency(currency);
    setMaturity(maturity);
    setFirstPremiumDate(firstPremiumDate);
    setPremiumFrequency(premiumFrequency);
    setUnderlying(underlying);
  }

  @Override
  public <T> T accept(FinancialSecurityVisitor<T> visitor) {
    return visitor.visitCDSSecurity(this);
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code CDSSecurity}.
   * @return the meta-bean, not null
   */
  public static CDSSecurity.Meta meta() {
    return CDSSecurity.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(CDSSecurity.Meta.INSTANCE);
  }

  @Override
  public CDSSecurity.Meta metaBean() {
    return CDSSecurity.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 1585636160:  // notional
        return getNotional();
      case 2002873877:  // recoveryRate
        return getRecoveryRate();
      case 652118999:  // premiumRate
        return getPremiumRate();
      case 575402001:  // currency
        return getCurrency();
      case 313843601:  // maturity
        return getMaturity();
      case 2071819733:  // firstPremiumDate
        return getFirstPremiumDate();
      case 146671813:  // premiumFrequency
        return getPremiumFrequency();
      case -1770633379:  // underlying
        return getUnderlying();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 1585636160:  // notional
        setNotional((Double) newValue);
        return;
      case 2002873877:  // recoveryRate
        setRecoveryRate((Double) newValue);
        return;
      case 652118999:  // premiumRate
        setPremiumRate((Double) newValue);
        return;
      case 575402001:  // currency
        setCurrency((Currency) newValue);
        return;
      case 313843601:  // maturity
        setMaturity((ZonedDateTime) newValue);
        return;
      case 2071819733:  // firstPremiumDate
        setFirstPremiumDate((ZonedDateTime) newValue);
        return;
      case 146671813:  // premiumFrequency
        setPremiumFrequency((Frequency) newValue);
        return;
      case -1770633379:  // underlying
        setUnderlying((ExternalId) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_currency, "currency");
    JodaBeanUtils.notNull(_maturity, "maturity");
    JodaBeanUtils.notNull(_firstPremiumDate, "firstPremiumDate");
    JodaBeanUtils.notNull(_premiumFrequency, "premiumFrequency");
    JodaBeanUtils.notNull(_underlying, "underlying");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      CDSSecurity other = (CDSSecurity) obj;
      return JodaBeanUtils.equal(getNotional(), other.getNotional()) &&
          JodaBeanUtils.equal(getRecoveryRate(), other.getRecoveryRate()) &&
          JodaBeanUtils.equal(getPremiumRate(), other.getPremiumRate()) &&
          JodaBeanUtils.equal(getCurrency(), other.getCurrency()) &&
          JodaBeanUtils.equal(getMaturity(), other.getMaturity()) &&
          JodaBeanUtils.equal(getFirstPremiumDate(), other.getFirstPremiumDate()) &&
          JodaBeanUtils.equal(getPremiumFrequency(), other.getPremiumFrequency()) &&
          JodaBeanUtils.equal(getUnderlying(), other.getUnderlying()) &&
          super.equals(obj);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = 7;
    hash += hash * 31 + JodaBeanUtils.hashCode(getNotional());
    hash += hash * 31 + JodaBeanUtils.hashCode(getRecoveryRate());
    hash += hash * 31 + JodaBeanUtils.hashCode(getPremiumRate());
    hash += hash * 31 + JodaBeanUtils.hashCode(getCurrency());
    hash += hash * 31 + JodaBeanUtils.hashCode(getMaturity());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFirstPremiumDate());
    hash += hash * 31 + JodaBeanUtils.hashCode(getPremiumFrequency());
    hash += hash * 31 + JodaBeanUtils.hashCode(getUnderlying());
    return hash ^ super.hashCode();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets notional
   * @return the value of the property
   */
  public double getNotional() {
    return _notional;
  }

  /**
   * Sets notional
   * @param notional  the new value of the property
   */
  public void setNotional(double notional) {
    this._notional = notional;
  }

  /**
   * Gets the the {@code notional} property.
   * @return the property, not null
   */
  public final Property<Double> notional() {
    return metaBean().notional().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets recovery rate against underlying asset in a default event
   * @return the value of the property
   */
  public double getRecoveryRate() {
    return _recoveryRate;
  }

  /**
   * Sets recovery rate against underlying asset in a default event
   * @param recoveryRate  the new value of the property
   */
  public void setRecoveryRate(double recoveryRate) {
    this._recoveryRate = recoveryRate;
  }

  /**
   * Gets the the {@code recoveryRate} property.
   * @return the property, not null
   */
  public final Property<Double> recoveryRate() {
    return metaBean().recoveryRate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets premium rate
   * @return the value of the property
   */
  public double getPremiumRate() {
    return _premiumRate;
  }

  /**
   * Sets premium rate
   * @param premiumRate  the new value of the property
   */
  public void setPremiumRate(double premiumRate) {
    this._premiumRate = premiumRate;
  }

  /**
   * Gets the the {@code premiumRate} property.
   * @return the property, not null
   */
  public final Property<Double> premiumRate() {
    return metaBean().premiumRate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets currency of the CDS
   * @return the value of the property, not null
   */
  public Currency getCurrency() {
    return _currency;
  }

  /**
   * Sets currency of the CDS
   * @param currency  the new value of the property, not null
   */
  public void setCurrency(Currency currency) {
    JodaBeanUtils.notNull(currency, "currency");
    this._currency = currency;
  }

  /**
   * Gets the the {@code currency} property.
   * @return the property, not null
   */
  public final Property<Currency> currency() {
    return metaBean().currency().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets maturity date
   * @return the value of the property, not null
   */
  public ZonedDateTime getMaturity() {
    return _maturity;
  }

  /**
   * Sets maturity date
   * @param maturity  the new value of the property, not null
   */
  public void setMaturity(ZonedDateTime maturity) {
    JodaBeanUtils.notNull(maturity, "maturity");
    this._maturity = maturity;
  }

  /**
   * Gets the the {@code maturity} property.
   * @return the property, not null
   */
  public final Property<ZonedDateTime> maturity() {
    return metaBean().maturity().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets first premium payment date
   * @return the value of the property, not null
   */
  public ZonedDateTime getFirstPremiumDate() {
    return _firstPremiumDate;
  }

  /**
   * Sets first premium payment date
   * @param firstPremiumDate  the new value of the property, not null
   */
  public void setFirstPremiumDate(ZonedDateTime firstPremiumDate) {
    JodaBeanUtils.notNull(firstPremiumDate, "firstPremiumDate");
    this._firstPremiumDate = firstPremiumDate;
  }

  /**
   * Gets the the {@code firstPremiumDate} property.
   * @return the property, not null
   */
  public final Property<ZonedDateTime> firstPremiumDate() {
    return metaBean().firstPremiumDate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets premium payment frequency
   * @return the value of the property, not null
   */
  public Frequency getPremiumFrequency() {
    return _premiumFrequency;
  }

  /**
   * Sets premium payment frequency
   * @param premiumFrequency  the new value of the property, not null
   */
  public void setPremiumFrequency(Frequency premiumFrequency) {
    JodaBeanUtils.notNull(premiumFrequency, "premiumFrequency");
    this._premiumFrequency = premiumFrequency;
  }

  /**
   * Gets the the {@code premiumFrequency} property.
   * @return the property, not null
   */
  public final Property<Frequency> premiumFrequency() {
    return metaBean().premiumFrequency().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the underlying.
   * @return the value of the property, not null
   */
  public ExternalId getUnderlying() {
    return _underlying;
  }

  /**
   * Sets the underlying.
   * @param underlying  the new value of the property, not null
   */
  public void setUnderlying(ExternalId underlying) {
    JodaBeanUtils.notNull(underlying, "underlying");
    this._underlying = underlying;
  }

  /**
   * Gets the the {@code underlying} property.
   * @return the property, not null
   */
  public final Property<ExternalId> underlying() {
    return metaBean().underlying().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code CDSSecurity}.
   */
  public static class Meta extends FinancialSecurity.Meta {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code notional} property.
     */
    private final MetaProperty<Double> _notional = DirectMetaProperty.ofReadWrite(
        this, "notional", CDSSecurity.class, Double.TYPE);
    /**
     * The meta-property for the {@code recoveryRate} property.
     */
    private final MetaProperty<Double> _recoveryRate = DirectMetaProperty.ofReadWrite(
        this, "recoveryRate", CDSSecurity.class, Double.TYPE);
    /**
     * The meta-property for the {@code premiumRate} property.
     */
    private final MetaProperty<Double> _premiumRate = DirectMetaProperty.ofReadWrite(
        this, "premiumRate", CDSSecurity.class, Double.TYPE);
    /**
     * The meta-property for the {@code currency} property.
     */
    private final MetaProperty<Currency> _currency = DirectMetaProperty.ofReadWrite(
        this, "currency", CDSSecurity.class, Currency.class);
    /**
     * The meta-property for the {@code maturity} property.
     */
    private final MetaProperty<ZonedDateTime> _maturity = DirectMetaProperty.ofReadWrite(
        this, "maturity", CDSSecurity.class, ZonedDateTime.class);
    /**
     * The meta-property for the {@code firstPremiumDate} property.
     */
    private final MetaProperty<ZonedDateTime> _firstPremiumDate = DirectMetaProperty.ofReadWrite(
        this, "firstPremiumDate", CDSSecurity.class, ZonedDateTime.class);
    /**
     * The meta-property for the {@code premiumFrequency} property.
     */
    private final MetaProperty<Frequency> _premiumFrequency = DirectMetaProperty.ofReadWrite(
        this, "premiumFrequency", CDSSecurity.class, Frequency.class);
    /**
     * The meta-property for the {@code underlying} property.
     */
    private final MetaProperty<ExternalId> _underlying = DirectMetaProperty.ofReadWrite(
        this, "underlying", CDSSecurity.class, ExternalId.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
      this, (DirectMetaPropertyMap) super.metaPropertyMap(),
        "notional",
        "recoveryRate",
        "premiumRate",
        "currency",
        "maturity",
        "firstPremiumDate",
        "premiumFrequency",
        "underlying");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 1585636160:  // notional
          return _notional;
        case 2002873877:  // recoveryRate
          return _recoveryRate;
        case 652118999:  // premiumRate
          return _premiumRate;
        case 575402001:  // currency
          return _currency;
        case 313843601:  // maturity
          return _maturity;
        case 2071819733:  // firstPremiumDate
          return _firstPremiumDate;
        case 146671813:  // premiumFrequency
          return _premiumFrequency;
        case -1770633379:  // underlying
          return _underlying;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends CDSSecurity> builder() {
      return new DirectBeanBuilder<CDSSecurity>(new CDSSecurity());
    }

    @Override
    public Class<? extends CDSSecurity> beanType() {
      return CDSSecurity.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code notional} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> notional() {
      return _notional;
    }

    /**
     * The meta-property for the {@code recoveryRate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> recoveryRate() {
      return _recoveryRate;
    }

    /**
     * The meta-property for the {@code premiumRate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> premiumRate() {
      return _premiumRate;
    }

    /**
     * The meta-property for the {@code currency} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Currency> currency() {
      return _currency;
    }

    /**
     * The meta-property for the {@code maturity} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ZonedDateTime> maturity() {
      return _maturity;
    }

    /**
     * The meta-property for the {@code firstPremiumDate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ZonedDateTime> firstPremiumDate() {
      return _firstPremiumDate;
    }

    /**
     * The meta-property for the {@code premiumFrequency} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Frequency> premiumFrequency() {
      return _premiumFrequency;
    }

    /**
     * The meta-property for the {@code underlying} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ExternalId> underlying() {
      return _underlying;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
