/**
 * Copyright (C) 2009 - 2011 by OpenGamma Inc.
 *
 * Please see distribution for license.
 */
package com.opengamma.financial.batch;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

import javax.time.calendar.LocalDate;

import org.joda.beans.BeanDefinition;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.BasicMetaBean;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectMetaProperty;

/**
 * Request for searching for batches.
 */
@BeanDefinition
public class BatchSearchRequest extends DirectBean {
  
  /**
   * The batch date.
   */
  @PropertyDefinition
  private LocalDate _observationDate;
  
  /**
   * The batch time - e.g., LDN_CLOSE.
   */
  @PropertyDefinition
  private String _observationTime;
  
  

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code BatchSearchRequest}.
   * @return the meta-bean, not null
   */
  public static BatchSearchRequest.Meta meta() {
    return BatchSearchRequest.Meta.INSTANCE;
  }

  @Override
  public BatchSearchRequest.Meta metaBean() {
    return BatchSearchRequest.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName) {
    switch (propertyName.hashCode()) {
      case 950748666:  // observationDate
        return getObservationDate();
      case 951232793:  // observationTime
        return getObservationTime();
    }
    return super.propertyGet(propertyName);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue) {
    switch (propertyName.hashCode()) {
      case 950748666:  // observationDate
        setObservationDate((LocalDate) newValue);
        return;
      case 951232793:  // observationTime
        setObservationTime((String) newValue);
        return;
    }
    super.propertySet(propertyName, newValue);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the batch date.
   * @return the value of the property
   */
  public LocalDate getObservationDate() {
    return _observationDate;
  }

  /**
   * Sets the batch date.
   * @param observationDate  the new value of the property
   */
  public void setObservationDate(LocalDate observationDate) {
    this._observationDate = observationDate;
  }

  /**
   * Gets the the {@code observationDate} property.
   * @return the property, not null
   */
  public final Property<LocalDate> observationDate() {
    return metaBean().observationDate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the batch time - e.g., LDN_CLOSE.
   * @return the value of the property
   */
  public String getObservationTime() {
    return _observationTime;
  }

  /**
   * Sets the batch time - e.g., LDN_CLOSE.
   * @param observationTime  the new value of the property
   */
  public void setObservationTime(String observationTime) {
    this._observationTime = observationTime;
  }

  /**
   * Gets the the {@code observationTime} property.
   * @return the property, not null
   */
  public final Property<String> observationTime() {
    return metaBean().observationTime().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code BatchSearchRequest}.
   */
  public static class Meta extends BasicMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code observationDate} property.
     */
    private final MetaProperty<LocalDate> _observationDate = DirectMetaProperty.ofReadWrite(this, "observationDate", LocalDate.class);
    /**
     * The meta-property for the {@code observationTime} property.
     */
    private final MetaProperty<String> _observationTime = DirectMetaProperty.ofReadWrite(this, "observationTime", String.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<Object>> _map;

    @SuppressWarnings({"unchecked", "rawtypes" })
    protected Meta() {
      LinkedHashMap temp = new LinkedHashMap();
      temp.put("observationDate", _observationDate);
      temp.put("observationTime", _observationTime);
      _map = Collections.unmodifiableMap(temp);
    }

    @Override
    public BatchSearchRequest createBean() {
      return new BatchSearchRequest();
    }

    @Override
    public Class<? extends BatchSearchRequest> beanType() {
      return BatchSearchRequest.class;
    }

    @Override
    public Map<String, MetaProperty<Object>> metaPropertyMap() {
      return _map;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code observationDate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<LocalDate> observationDate() {
      return _observationDate;
    }

    /**
     * The meta-property for the {@code observationTime} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> observationTime() {
      return _observationTime;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
