/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 * 
 * Please see distribution for license.
 */
package com.opengamma.financial.analytics.curve;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.opengamma.core.config.Config;
import com.opengamma.id.MutableUniqueIdentifiable;
import com.opengamma.id.UniqueId;
import com.opengamma.id.UniqueIdentifiable;

/**
 * 
 */
@BeanDefinition
@Config
public class CurveConstructionConfiguration extends DirectBean implements Serializable, UniqueIdentifiable, MutableUniqueIdentifiable {

  /** Serialization version */
  private static final long serialVersionUID = 1L;

  /**
   * The unique id.
   */
  @PropertyDefinition
  private UniqueId _uniqueId;

  /**
   * The curve groups.
   */
  @PropertyDefinition(validate = "notNull")
  private List<CurveGroupConfiguration> _curveGroups;

  /* package */CurveConstructionConfiguration() {
  }

  public CurveConstructionConfiguration(final List<CurveGroupConfiguration> curveGroups) {
    setCurveGroups(curveGroups);
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code CurveConstructionConfiguration}.
   * @return the meta-bean, not null
   */
  public static CurveConstructionConfiguration.Meta meta() {
    return CurveConstructionConfiguration.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(CurveConstructionConfiguration.Meta.INSTANCE);
  }

  @Override
  public CurveConstructionConfiguration.Meta metaBean() {
    return CurveConstructionConfiguration.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case -294460212:  // uniqueId
        return getUniqueId();
      case -2135025757:  // curveGroups
        return getCurveGroups();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @SuppressWarnings("unchecked")
  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case -294460212:  // uniqueId
        setUniqueId((UniqueId) newValue);
        return;
      case -2135025757:  // curveGroups
        setCurveGroups((List<CurveGroupConfiguration>) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_curveGroups, "curveGroups");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      CurveConstructionConfiguration other = (CurveConstructionConfiguration) obj;
      return JodaBeanUtils.equal(getUniqueId(), other.getUniqueId()) &&
          JodaBeanUtils.equal(getCurveGroups(), other.getCurveGroups());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    hash += hash * 31 + JodaBeanUtils.hashCode(getUniqueId());
    hash += hash * 31 + JodaBeanUtils.hashCode(getCurveGroups());
    return hash;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the unique id.
   * @return the value of the property
   */
  public UniqueId getUniqueId() {
    return _uniqueId;
  }

  /**
   * Sets the unique id.
   * @param uniqueId  the new value of the property
   */
  public void setUniqueId(UniqueId uniqueId) {
    this._uniqueId = uniqueId;
  }

  /**
   * Gets the the {@code uniqueId} property.
   * @return the property, not null
   */
  public final Property<UniqueId> uniqueId() {
    return metaBean().uniqueId().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the curve groups.
   * @return the value of the property, not null
   */
  public List<CurveGroupConfiguration> getCurveGroups() {
    return _curveGroups;
  }

  /**
   * Sets the curve groups.
   * @param curveGroups  the new value of the property, not null
   */
  public void setCurveGroups(List<CurveGroupConfiguration> curveGroups) {
    JodaBeanUtils.notNull(curveGroups, "curveGroups");
    this._curveGroups = curveGroups;
  }

  /**
   * Gets the the {@code curveGroups} property.
   * @return the property, not null
   */
  public final Property<List<CurveGroupConfiguration>> curveGroups() {
    return metaBean().curveGroups().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code CurveConstructionConfiguration}.
   */
  public static class Meta extends DirectMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code uniqueId} property.
     */
    private final MetaProperty<UniqueId> _uniqueId = DirectMetaProperty.ofReadWrite(
        this, "uniqueId", CurveConstructionConfiguration.class, UniqueId.class);
    /**
     * The meta-property for the {@code curveGroups} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<List<CurveGroupConfiguration>> _curveGroups = DirectMetaProperty.ofReadWrite(
        this, "curveGroups", CurveConstructionConfiguration.class, (Class) List.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, null,
        "uniqueId",
        "curveGroups");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case -294460212:  // uniqueId
          return _uniqueId;
        case -2135025757:  // curveGroups
          return _curveGroups;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends CurveConstructionConfiguration> builder() {
      return new DirectBeanBuilder<CurveConstructionConfiguration>(new CurveConstructionConfiguration());
    }

    @Override
    public Class<? extends CurveConstructionConfiguration> beanType() {
      return CurveConstructionConfiguration.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code uniqueId} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<UniqueId> uniqueId() {
      return _uniqueId;
    }

    /**
     * The meta-property for the {@code curveGroups} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<List<CurveGroupConfiguration>> curveGroups() {
      return _curveGroups;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
