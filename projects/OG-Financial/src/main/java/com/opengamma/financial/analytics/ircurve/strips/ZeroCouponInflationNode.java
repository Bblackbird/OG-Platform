/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.financial.analytics.ircurve.strips;

import java.util.Map;

import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.opengamma.id.ExternalId;
import com.opengamma.util.ArgumentChecker;
import com.opengamma.util.time.Tenor;

/**
 * Zero-coupon inflation curve node.
 */
@BeanDefinition
public class ZeroCouponInflationNode extends CurveNode {

  /** Serialization version */
  private static final long serialVersionUID = 1L;

  /**
   * The tenor.
   */
  @PropertyDefinition(validate = "notNull")
  private Tenor _tenor;

  /**
   * The zero-coupon convention.
   */
  @PropertyDefinition(validate = "notNull")
  private ExternalId _zeroCouponConvention;

  /**
   * The fixed leg convention.
   */
  @PropertyDefinition(validate = "notNull")
  private ExternalId _fixedLegConvention;

  /**
   * For the builder.
   */
  /* package */ ZeroCouponInflationNode() {

  }

  /**
   * @param tenor The tenor, not null
   * @param zeroCouponConvention The zero coupon convention id, not null
   * @param fixedLegConvention The fixed leg convention id, not null
   * @param curveNodeIdMapperName The curve node id mapper name, not null
   */
  public ZeroCouponInflationNode(final Tenor tenor, final ExternalId zeroCouponConvention, final ExternalId fixedLegConvention, final String curveNodeIdMapperName) {
    super(curveNodeIdMapperName);
    setTenor(tenor);
    setZeroCouponConvention(zeroCouponConvention);
    setFixedLegConvention(fixedLegConvention);
  }

  /**
   * @param tenor The tenor, not null
   * @param zeroCouponConvention The zero coupon convention id, not null
   * @param fixedLegConvention The fixed leg convention id, not null
   * @param curveNodeIdMapperName The curve node id mapper name, not null
   * @param name The name, not null
   */
  public ZeroCouponInflationNode(final Tenor tenor, final ExternalId zeroCouponConvention, final ExternalId fixedLegConvention, final String curveNodeIdMapperName,
      final String name) {
    super(curveNodeIdMapperName, name);
    setTenor(tenor);
    setZeroCouponConvention(zeroCouponConvention);
    setFixedLegConvention(fixedLegConvention);
  }

  @Override
  public Tenor getResolvedMaturity() {
    return _tenor;
  }

  @Override
  public <T> T accept(final CurveNodeVisitor<T> visitor) {
    ArgumentChecker.notNull(visitor, "visitor");
    return visitor.visitZeroCouponInflationNode(this);
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code ZeroCouponInflationNode}.
   * @return the meta-bean, not null
   */
  public static ZeroCouponInflationNode.Meta meta() {
    return ZeroCouponInflationNode.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(ZeroCouponInflationNode.Meta.INSTANCE);
  }

  @Override
  public ZeroCouponInflationNode.Meta metaBean() {
    return ZeroCouponInflationNode.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 110246592:  // tenor
        return getTenor();
      case -576353537:  // zeroCouponConvention
        return getZeroCouponConvention();
      case -2101140213:  // fixedLegConvention
        return getFixedLegConvention();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 110246592:  // tenor
        setTenor((Tenor) newValue);
        return;
      case -576353537:  // zeroCouponConvention
        setZeroCouponConvention((ExternalId) newValue);
        return;
      case -2101140213:  // fixedLegConvention
        setFixedLegConvention((ExternalId) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_tenor, "tenor");
    JodaBeanUtils.notNull(_zeroCouponConvention, "zeroCouponConvention");
    JodaBeanUtils.notNull(_fixedLegConvention, "fixedLegConvention");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      ZeroCouponInflationNode other = (ZeroCouponInflationNode) obj;
      return JodaBeanUtils.equal(getTenor(), other.getTenor()) &&
          JodaBeanUtils.equal(getZeroCouponConvention(), other.getZeroCouponConvention()) &&
          JodaBeanUtils.equal(getFixedLegConvention(), other.getFixedLegConvention()) &&
          super.equals(obj);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = 7;
    hash += hash * 31 + JodaBeanUtils.hashCode(getTenor());
    hash += hash * 31 + JodaBeanUtils.hashCode(getZeroCouponConvention());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFixedLegConvention());
    return hash ^ super.hashCode();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the tenor.
   * @return the value of the property, not null
   */
  public Tenor getTenor() {
    return _tenor;
  }

  /**
   * Sets the tenor.
   * @param tenor  the new value of the property, not null
   */
  public void setTenor(Tenor tenor) {
    JodaBeanUtils.notNull(tenor, "tenor");
    this._tenor = tenor;
  }

  /**
   * Gets the the {@code tenor} property.
   * @return the property, not null
   */
  public final Property<Tenor> tenor() {
    return metaBean().tenor().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the zero-coupon convention.
   * @return the value of the property, not null
   */
  public ExternalId getZeroCouponConvention() {
    return _zeroCouponConvention;
  }

  /**
   * Sets the zero-coupon convention.
   * @param zeroCouponConvention  the new value of the property, not null
   */
  public void setZeroCouponConvention(ExternalId zeroCouponConvention) {
    JodaBeanUtils.notNull(zeroCouponConvention, "zeroCouponConvention");
    this._zeroCouponConvention = zeroCouponConvention;
  }

  /**
   * Gets the the {@code zeroCouponConvention} property.
   * @return the property, not null
   */
  public final Property<ExternalId> zeroCouponConvention() {
    return metaBean().zeroCouponConvention().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the fixed leg convention.
   * @return the value of the property, not null
   */
  public ExternalId getFixedLegConvention() {
    return _fixedLegConvention;
  }

  /**
   * Sets the fixed leg convention.
   * @param fixedLegConvention  the new value of the property, not null
   */
  public void setFixedLegConvention(ExternalId fixedLegConvention) {
    JodaBeanUtils.notNull(fixedLegConvention, "fixedLegConvention");
    this._fixedLegConvention = fixedLegConvention;
  }

  /**
   * Gets the the {@code fixedLegConvention} property.
   * @return the property, not null
   */
  public final Property<ExternalId> fixedLegConvention() {
    return metaBean().fixedLegConvention().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code ZeroCouponInflationNode}.
   */
  public static class Meta extends CurveNode.Meta {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code tenor} property.
     */
    private final MetaProperty<Tenor> _tenor = DirectMetaProperty.ofReadWrite(
        this, "tenor", ZeroCouponInflationNode.class, Tenor.class);
    /**
     * The meta-property for the {@code zeroCouponConvention} property.
     */
    private final MetaProperty<ExternalId> _zeroCouponConvention = DirectMetaProperty.ofReadWrite(
        this, "zeroCouponConvention", ZeroCouponInflationNode.class, ExternalId.class);
    /**
     * The meta-property for the {@code fixedLegConvention} property.
     */
    private final MetaProperty<ExternalId> _fixedLegConvention = DirectMetaProperty.ofReadWrite(
        this, "fixedLegConvention", ZeroCouponInflationNode.class, ExternalId.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, (DirectMetaPropertyMap) super.metaPropertyMap(),
        "tenor",
        "zeroCouponConvention",
        "fixedLegConvention");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 110246592:  // tenor
          return _tenor;
        case -576353537:  // zeroCouponConvention
          return _zeroCouponConvention;
        case -2101140213:  // fixedLegConvention
          return _fixedLegConvention;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends ZeroCouponInflationNode> builder() {
      return new DirectBeanBuilder<ZeroCouponInflationNode>(new ZeroCouponInflationNode());
    }

    @Override
    public Class<? extends ZeroCouponInflationNode> beanType() {
      return ZeroCouponInflationNode.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code tenor} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Tenor> tenor() {
      return _tenor;
    }

    /**
     * The meta-property for the {@code zeroCouponConvention} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ExternalId> zeroCouponConvention() {
      return _zeroCouponConvention;
    }

    /**
     * The meta-property for the {@code fixedLegConvention} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ExternalId> fixedLegConvention() {
      return _fixedLegConvention;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
