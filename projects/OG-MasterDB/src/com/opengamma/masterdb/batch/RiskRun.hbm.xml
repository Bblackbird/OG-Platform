<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="com.opengamma.masterdb.batch">

    <typedef class="com.opengamma.util.db.hibernate.types.PersistentInstant" name="instant"/>

    <class name="RiskRun" table="rsk_run">
        <id name="id">
            <generator class="org.hibernate.id.enhanced.SequenceStyleGenerator">
                <param name="optimizer">hilo</param>
                <param name="increment_size">100</param>
            </generator>
        </id>

        <many-to-one name="liveDataSnapshot"
                     column="live_data_snapshot_id"
                     not-null="true"/>

        <many-to-one name="viewDefinition"
                     column="view_definition_id"
                     not-null="true"/>

        <many-to-one name="versionCorrection"
                     column="version_correction_id"
                     not-null="true"/>


        <property name="createInstant" column="create_instant" not-null="true" type="instant"/>
        <property name="startInstant" column="start_instant" not-null="true" type="instant"/>
        <property name="endInstant" column="end_instant" type="instant"/>
        <property name="numRestarts" column="num_restarts"/>
        <property name="valuationTime" column="valuation_time" type="instant"/>

        <set name="properties" inverse="true">
            <key column="run_id"/>
            <one-to-many class="RiskRunProperty"/>
        </set>

    <set name="calculationConfigurations" inverse="true">
      <key column="run_id"/>
      <one-to-many class="CalculationConfiguration"/>
    </set>

        <property name="complete" not-null="true"/>

        <!-- EXAMPLE OF CompositeUserType (mulit column user type)
        <property type="com.opengamma.util.db.hibernate.types.PersistentDateTimeTZ" name="dateTime">
          <column name="dateTime"/>
          <column name="zone"/>
        </property>-->


    </class>
    <query name="RiskRun.one.byId">
        from RiskRun as a
        where a.id = :id
    </query>

    <query name="RiskRun.delete.byId">
        delete RiskRun r
        where r.id = :id
    </query>

</hibernate-mapping>