/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 * 
 * Please see distribution for license.
 */
package com.opengamma.masterdb.security.hibernate.cds;

import java.util.Map;

import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.opengamma.financial.security.cds.CDSSecurity;
import com.opengamma.masterdb.security.hibernate.BusinessDayConventionBean;
import com.opengamma.masterdb.security.hibernate.CurrencyBean;
import com.opengamma.masterdb.security.hibernate.DayCountBean;
import com.opengamma.masterdb.security.hibernate.ExternalIdBean;
import com.opengamma.masterdb.security.hibernate.FrequencyBean;
import com.opengamma.masterdb.security.hibernate.SecurityBean;
import com.opengamma.masterdb.security.hibernate.ZonedDateTimeBean;

/**
 * Bean representation of {@link CDSSecurity}
 * @author Martin Traverse
 */
@BeanDefinition
public class CDSSecurityBean extends SecurityBean {

  @PropertyDefinition
  private double _notional;
  
  @PropertyDefinition
  private double _recoveryRate;
  
  @PropertyDefinition
  private double _spread;
  
  @PropertyDefinition(validate = "notNull")
  private CurrencyBean _currency;
  
  @PropertyDefinition(validate = "notNull")
  private ZonedDateTimeBean _maturity;
  
  @PropertyDefinition(validate = "notNull")
  private ZonedDateTimeBean _protectionStartDate;
  
  @PropertyDefinition(validate = "notNull")
  private FrequencyBean _premiumFrequency;
  
  @PropertyDefinition(validate = "notNull")
  private DayCountBean _dayCount;
  
  @PropertyDefinition(validate = "notNull")
  private BusinessDayConventionBean _businessDayConvention;
  
  @PropertyDefinition
  private ExternalIdBean _underlying;
  
  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code CDSSecurityBean}.
   * @return the meta-bean, not null
   */
  public static CDSSecurityBean.Meta meta() {
    return CDSSecurityBean.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(CDSSecurityBean.Meta.INSTANCE);
  }

  @Override
  public CDSSecurityBean.Meta metaBean() {
    return CDSSecurityBean.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 1585636160:  // notional
        return getNotional();
      case 2002873877:  // recoveryRate
        return getRecoveryRate();
      case -895684237:  // spread
        return getSpread();
      case 575402001:  // currency
        return getCurrency();
      case 313843601:  // maturity
        return getMaturity();
      case 973819991:  // protectionStartDate
        return getProtectionStartDate();
      case 146671813:  // premiumFrequency
        return getPremiumFrequency();
      case 1905311443:  // dayCount
        return getDayCount();
      case -1002835891:  // businessDayConvention
        return getBusinessDayConvention();
      case -1770633379:  // underlying
        return getUnderlying();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 1585636160:  // notional
        setNotional((Double) newValue);
        return;
      case 2002873877:  // recoveryRate
        setRecoveryRate((Double) newValue);
        return;
      case -895684237:  // spread
        setSpread((Double) newValue);
        return;
      case 575402001:  // currency
        setCurrency((CurrencyBean) newValue);
        return;
      case 313843601:  // maturity
        setMaturity((ZonedDateTimeBean) newValue);
        return;
      case 973819991:  // protectionStartDate
        setProtectionStartDate((ZonedDateTimeBean) newValue);
        return;
      case 146671813:  // premiumFrequency
        setPremiumFrequency((FrequencyBean) newValue);
        return;
      case 1905311443:  // dayCount
        setDayCount((DayCountBean) newValue);
        return;
      case -1002835891:  // businessDayConvention
        setBusinessDayConvention((BusinessDayConventionBean) newValue);
        return;
      case -1770633379:  // underlying
        setUnderlying((ExternalIdBean) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_currency, "currency");
    JodaBeanUtils.notNull(_maturity, "maturity");
    JodaBeanUtils.notNull(_protectionStartDate, "protectionStartDate");
    JodaBeanUtils.notNull(_premiumFrequency, "premiumFrequency");
    JodaBeanUtils.notNull(_dayCount, "dayCount");
    JodaBeanUtils.notNull(_businessDayConvention, "businessDayConvention");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      CDSSecurityBean other = (CDSSecurityBean) obj;
      return JodaBeanUtils.equal(getNotional(), other.getNotional()) &&
          JodaBeanUtils.equal(getRecoveryRate(), other.getRecoveryRate()) &&
          JodaBeanUtils.equal(getSpread(), other.getSpread()) &&
          JodaBeanUtils.equal(getCurrency(), other.getCurrency()) &&
          JodaBeanUtils.equal(getMaturity(), other.getMaturity()) &&
          JodaBeanUtils.equal(getProtectionStartDate(), other.getProtectionStartDate()) &&
          JodaBeanUtils.equal(getPremiumFrequency(), other.getPremiumFrequency()) &&
          JodaBeanUtils.equal(getDayCount(), other.getDayCount()) &&
          JodaBeanUtils.equal(getBusinessDayConvention(), other.getBusinessDayConvention()) &&
          JodaBeanUtils.equal(getUnderlying(), other.getUnderlying()) &&
          super.equals(obj);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = 7;
    hash += hash * 31 + JodaBeanUtils.hashCode(getNotional());
    hash += hash * 31 + JodaBeanUtils.hashCode(getRecoveryRate());
    hash += hash * 31 + JodaBeanUtils.hashCode(getSpread());
    hash += hash * 31 + JodaBeanUtils.hashCode(getCurrency());
    hash += hash * 31 + JodaBeanUtils.hashCode(getMaturity());
    hash += hash * 31 + JodaBeanUtils.hashCode(getProtectionStartDate());
    hash += hash * 31 + JodaBeanUtils.hashCode(getPremiumFrequency());
    hash += hash * 31 + JodaBeanUtils.hashCode(getDayCount());
    hash += hash * 31 + JodaBeanUtils.hashCode(getBusinessDayConvention());
    hash += hash * 31 + JodaBeanUtils.hashCode(getUnderlying());
    return hash ^ super.hashCode();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the notional.
   * @return the value of the property
   */
  public double getNotional() {
    return _notional;
  }

  /**
   * Sets the notional.
   * @param notional  the new value of the property
   */
  public void setNotional(double notional) {
    this._notional = notional;
  }

  /**
   * Gets the the {@code notional} property.
   * @return the property, not null
   */
  public final Property<Double> notional() {
    return metaBean().notional().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the recoveryRate.
   * @return the value of the property
   */
  public double getRecoveryRate() {
    return _recoveryRate;
  }

  /**
   * Sets the recoveryRate.
   * @param recoveryRate  the new value of the property
   */
  public void setRecoveryRate(double recoveryRate) {
    this._recoveryRate = recoveryRate;
  }

  /**
   * Gets the the {@code recoveryRate} property.
   * @return the property, not null
   */
  public final Property<Double> recoveryRate() {
    return metaBean().recoveryRate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the spread.
   * @return the value of the property
   */
  public double getSpread() {
    return _spread;
  }

  /**
   * Sets the spread.
   * @param spread  the new value of the property
   */
  public void setSpread(double spread) {
    this._spread = spread;
  }

  /**
   * Gets the the {@code spread} property.
   * @return the property, not null
   */
  public final Property<Double> spread() {
    return metaBean().spread().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the currency.
   * @return the value of the property, not null
   */
  public CurrencyBean getCurrency() {
    return _currency;
  }

  /**
   * Sets the currency.
   * @param currency  the new value of the property, not null
   */
  public void setCurrency(CurrencyBean currency) {
    JodaBeanUtils.notNull(currency, "currency");
    this._currency = currency;
  }

  /**
   * Gets the the {@code currency} property.
   * @return the property, not null
   */
  public final Property<CurrencyBean> currency() {
    return metaBean().currency().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the maturity.
   * @return the value of the property, not null
   */
  public ZonedDateTimeBean getMaturity() {
    return _maturity;
  }

  /**
   * Sets the maturity.
   * @param maturity  the new value of the property, not null
   */
  public void setMaturity(ZonedDateTimeBean maturity) {
    JodaBeanUtils.notNull(maturity, "maturity");
    this._maturity = maturity;
  }

  /**
   * Gets the the {@code maturity} property.
   * @return the property, not null
   */
  public final Property<ZonedDateTimeBean> maturity() {
    return metaBean().maturity().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the protectionStartDate.
   * @return the value of the property, not null
   */
  public ZonedDateTimeBean getProtectionStartDate() {
    return _protectionStartDate;
  }

  /**
   * Sets the protectionStartDate.
   * @param protectionStartDate  the new value of the property, not null
   */
  public void setProtectionStartDate(ZonedDateTimeBean protectionStartDate) {
    JodaBeanUtils.notNull(protectionStartDate, "protectionStartDate");
    this._protectionStartDate = protectionStartDate;
  }

  /**
   * Gets the the {@code protectionStartDate} property.
   * @return the property, not null
   */
  public final Property<ZonedDateTimeBean> protectionStartDate() {
    return metaBean().protectionStartDate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the premiumFrequency.
   * @return the value of the property, not null
   */
  public FrequencyBean getPremiumFrequency() {
    return _premiumFrequency;
  }

  /**
   * Sets the premiumFrequency.
   * @param premiumFrequency  the new value of the property, not null
   */
  public void setPremiumFrequency(FrequencyBean premiumFrequency) {
    JodaBeanUtils.notNull(premiumFrequency, "premiumFrequency");
    this._premiumFrequency = premiumFrequency;
  }

  /**
   * Gets the the {@code premiumFrequency} property.
   * @return the property, not null
   */
  public final Property<FrequencyBean> premiumFrequency() {
    return metaBean().premiumFrequency().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the dayCount.
   * @return the value of the property, not null
   */
  public DayCountBean getDayCount() {
    return _dayCount;
  }

  /**
   * Sets the dayCount.
   * @param dayCount  the new value of the property, not null
   */
  public void setDayCount(DayCountBean dayCount) {
    JodaBeanUtils.notNull(dayCount, "dayCount");
    this._dayCount = dayCount;
  }

  /**
   * Gets the the {@code dayCount} property.
   * @return the property, not null
   */
  public final Property<DayCountBean> dayCount() {
    return metaBean().dayCount().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the businessDayConvention.
   * @return the value of the property, not null
   */
  public BusinessDayConventionBean getBusinessDayConvention() {
    return _businessDayConvention;
  }

  /**
   * Sets the businessDayConvention.
   * @param businessDayConvention  the new value of the property, not null
   */
  public void setBusinessDayConvention(BusinessDayConventionBean businessDayConvention) {
    JodaBeanUtils.notNull(businessDayConvention, "businessDayConvention");
    this._businessDayConvention = businessDayConvention;
  }

  /**
   * Gets the the {@code businessDayConvention} property.
   * @return the property, not null
   */
  public final Property<BusinessDayConventionBean> businessDayConvention() {
    return metaBean().businessDayConvention().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the underlying.
   * @return the value of the property
   */
  public ExternalIdBean getUnderlying() {
    return _underlying;
  }

  /**
   * Sets the underlying.
   * @param underlying  the new value of the property
   */
  public void setUnderlying(ExternalIdBean underlying) {
    this._underlying = underlying;
  }

  /**
   * Gets the the {@code underlying} property.
   * @return the property, not null
   */
  public final Property<ExternalIdBean> underlying() {
    return metaBean().underlying().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code CDSSecurityBean}.
   */
  public static class Meta extends SecurityBean.Meta {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code notional} property.
     */
    private final MetaProperty<Double> _notional = DirectMetaProperty.ofReadWrite(
        this, "notional", CDSSecurityBean.class, Double.TYPE);
    /**
     * The meta-property for the {@code recoveryRate} property.
     */
    private final MetaProperty<Double> _recoveryRate = DirectMetaProperty.ofReadWrite(
        this, "recoveryRate", CDSSecurityBean.class, Double.TYPE);
    /**
     * The meta-property for the {@code spread} property.
     */
    private final MetaProperty<Double> _spread = DirectMetaProperty.ofReadWrite(
        this, "spread", CDSSecurityBean.class, Double.TYPE);
    /**
     * The meta-property for the {@code currency} property.
     */
    private final MetaProperty<CurrencyBean> _currency = DirectMetaProperty.ofReadWrite(
        this, "currency", CDSSecurityBean.class, CurrencyBean.class);
    /**
     * The meta-property for the {@code maturity} property.
     */
    private final MetaProperty<ZonedDateTimeBean> _maturity = DirectMetaProperty.ofReadWrite(
        this, "maturity", CDSSecurityBean.class, ZonedDateTimeBean.class);
    /**
     * The meta-property for the {@code protectionStartDate} property.
     */
    private final MetaProperty<ZonedDateTimeBean> _protectionStartDate = DirectMetaProperty.ofReadWrite(
        this, "protectionStartDate", CDSSecurityBean.class, ZonedDateTimeBean.class);
    /**
     * The meta-property for the {@code premiumFrequency} property.
     */
    private final MetaProperty<FrequencyBean> _premiumFrequency = DirectMetaProperty.ofReadWrite(
        this, "premiumFrequency", CDSSecurityBean.class, FrequencyBean.class);
    /**
     * The meta-property for the {@code dayCount} property.
     */
    private final MetaProperty<DayCountBean> _dayCount = DirectMetaProperty.ofReadWrite(
        this, "dayCount", CDSSecurityBean.class, DayCountBean.class);
    /**
     * The meta-property for the {@code businessDayConvention} property.
     */
    private final MetaProperty<BusinessDayConventionBean> _businessDayConvention = DirectMetaProperty.ofReadWrite(
        this, "businessDayConvention", CDSSecurityBean.class, BusinessDayConventionBean.class);
    /**
     * The meta-property for the {@code underlying} property.
     */
    private final MetaProperty<ExternalIdBean> _underlying = DirectMetaProperty.ofReadWrite(
        this, "underlying", CDSSecurityBean.class, ExternalIdBean.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
      this, (DirectMetaPropertyMap) super.metaPropertyMap(),
        "notional",
        "recoveryRate",
        "spread",
        "currency",
        "maturity",
        "protectionStartDate",
        "premiumFrequency",
        "dayCount",
        "businessDayConvention",
        "underlying");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 1585636160:  // notional
          return _notional;
        case 2002873877:  // recoveryRate
          return _recoveryRate;
        case -895684237:  // spread
          return _spread;
        case 575402001:  // currency
          return _currency;
        case 313843601:  // maturity
          return _maturity;
        case 973819991:  // protectionStartDate
          return _protectionStartDate;
        case 146671813:  // premiumFrequency
          return _premiumFrequency;
        case 1905311443:  // dayCount
          return _dayCount;
        case -1002835891:  // businessDayConvention
          return _businessDayConvention;
        case -1770633379:  // underlying
          return _underlying;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends CDSSecurityBean> builder() {
      return new DirectBeanBuilder<CDSSecurityBean>(new CDSSecurityBean());
    }

    @Override
    public Class<? extends CDSSecurityBean> beanType() {
      return CDSSecurityBean.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code notional} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> notional() {
      return _notional;
    }

    /**
     * The meta-property for the {@code recoveryRate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> recoveryRate() {
      return _recoveryRate;
    }

    /**
     * The meta-property for the {@code spread} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> spread() {
      return _spread;
    }

    /**
     * The meta-property for the {@code currency} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<CurrencyBean> currency() {
      return _currency;
    }

    /**
     * The meta-property for the {@code maturity} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ZonedDateTimeBean> maturity() {
      return _maturity;
    }

    /**
     * The meta-property for the {@code protectionStartDate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ZonedDateTimeBean> protectionStartDate() {
      return _protectionStartDate;
    }

    /**
     * The meta-property for the {@code premiumFrequency} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<FrequencyBean> premiumFrequency() {
      return _premiumFrequency;
    }

    /**
     * The meta-property for the {@code dayCount} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<DayCountBean> dayCount() {
      return _dayCount;
    }

    /**
     * The meta-property for the {@code businessDayConvention} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<BusinessDayConventionBean> businessDayConvention() {
      return _businessDayConvention;
    }

    /**
     * The meta-property for the {@code underlying} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ExternalIdBean> underlying() {
      return _underlying;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
